[{"page_content": "Master of Science The Master of Science (M.S.) in Computer Science is the first graduate degree in the field, and can take one and a half years of full-time study to complete. The master's program is designed to prepare students for advanced careers in the computing industry, to create a research environment in computer science, and to prepare students for graduate work at the Ph.D. level. Students entering the program must have a bachelor's degree and/or adequate background in computer science. The master's program requires the completion of an approved program of 45 credits, with a thesis option. Coursework includes core courses in theory and programming practice, plus a 9-credit concentration in one specialization area. Core Requirements (6) Students are encouraged to take these courses as early as possible in your graduate program. One Theory course from: CS 581 Theory of Computation (3) CS 584 Algorithm Design & Analysis (3) CS 578 Programming Language Semantics (3) One Programming Practice course from: CS 558 Programming Languages (3) Any 500-level course designated by the department as programming-intensive (noted by a P in the undergraduate course section) (3) Track Requirements (9) All students in the CS Master's program must take three courses from a single track of the following: Databases Artificial Intelligence & Machine Learning Languages & Programming Security Software Engineering Systems & Networking The list of required courses and approved electives for each track are listed in the Track Courses page (/../computer-science/node/171) . Elective Requirements (30) Students must take enough electives to complete 45 total credits for the MS degree. Electives can be any 500-level CS course (/../computer-science/node/111) (see specific notes regarding CS 501-509 coursework below). A limited number of credits taken outside Computer Science can count towards the elective requirements, with advisor approval. Read more about Non-CS credits below. CS 505 (READING & CONFERENCE) AND CS 506 (SPECIAL PROJECT) CREDITS Students who are interested in exploring a specific topic or conducting a special research or other project for credit have the option to register in CS 505 (Reading & Conference) and/or CS 506 (Special Project) credits. A maximum of 6 credits of CS 505 and CS 506 can be counted towards the CS Master's degree elective requirements. Examples: CS 505 Reading & Conference: the student will study a textbook on a particular topic; complete the end of chapter problems; and discuss/present their chapter summaries, exercise solutions, and other content with the supervising faculty member. CS 506 Special Project: the student will gather and analyze data or research an agreed topic and write up their results in a presentable format under the guidance of the supervising faculty member. Students first need to find a faculty member to supervise these credits. The faculty member can help students to develop their idea, to ensure that it is consistent with the academic goals of the program, and to determine the appropriate course number, credit number, and project scope. They will assign the final grade at the end of the term. The By Arrangement Approval Dashboard can be used to register for CS 505/506 credits. Either the student or the faculty member can initiate a request, and once both have approved it, the request is automatically forwarded to the Department for approval and then to the Registrar's Office for processing. Thesis Option The thesis option requires the completion of 45 credits including 6-9 credits of CS 503 (Thesis) and an oral thesis defense. Students must follow PSU policies regarding committee appointments, defense procedures, formatting requirements, and submission procedures. University requirements and additional information for a master's thesis (/../gradschool/thesis-and-dissertation-information) are outlined by the PSU Graduate School. A thesis defense must take place in a meeting with the student and the appointed committee. It should be scheduled on a date that meets the GS deadline (/../gradschool/graduate-candidate-deadlines) for the desired graduation term. A room for the thesis defense may be scheduled through the CS department ( csoffice@pdx.edu (mailto:csoffice@pdx.edu) ). Thesis students will need to send their abstract/bio information and any requested equipment (projector) at least two weeks in advance of the defense to the CS Graduate Advisor ( gccs@pdx.edu (mailto:gccs@pdx.edu) ). Advising All newly admitted MS students will be advised by the CS Graduate Advisor. Every MS student is required to maintain a plan of study form (/../computer-science/sites/g/files/znldhr1671/files/2020-07/MS-Plan-of-Study.pdf) , which outlines both courses taken so far towards the degree and courses planned for the remainder of the program. This will also note any transfer and pre-admission courses, non-CS courses, and a student's intended track. An initial plan must be submitted to the CS Graduate Advisor by the end of the second term after the student's formal admission to the program. Approval from the CS Graduate Advisor will indicate an acceptable outline of the student's coursework. However, the plan can be revised at any time by mutual agreement of the student and the CS Graduate Advisor. A final version of a student's plan of study should be submitted by the student's last term of the program. Students completing a thesis are required to have a faculty adviser. Pre-admission, Transfer, and Non-CS Credits A minimum of 30 credits must be taken in Computer Science at Portland State University. Given this, students may use a combined total of 15 pre-admission, transfer, and non-CS credits toward their Master's degree with CS Graduate Advisor approval ( gccs@pdx.edu (mailto:gccs@pdx.edu) ). One additional credit beyond the 15 credit limit can be used provided none of the courses are a 1-credit course. Pre-admission credits (taken before the term of formal admission) can include both transfer and PSU credits. Pre-admission credits taken at PSU are requested via a DARS exception submitted to the Graduate School. This request should be made soon after admission to the graduate program. Transfer credits refer to credits taken from another institution other than PSU. To request approval of transfer credits, complete and submit the GO-21M form (Proposed Transfer Credit) (/../gradschool/forms) to the CS Graduate Advisor. Students should submit the GO-21 form during the first term of enrollment in the program, so there is sufficient time to complete any additional coursework that may be necessary. Any transfer credits must be approved before graduation paperwork can be processed. OHSU joint campus credits are considered transfer credits and are transferred via a different process. Read below for more information. Non-CS credits taken outside of Computer Science, such as ECE or Math*, can count towards elective requirements once approved. Non-CS courses must be graduate level. *Exception: only one ETM course will count towards the elective requirements. All ETM courses are eligible to transfer but students are limited to using only one for the CS degree requirements. Departmental Requirements In addition to the departmental requirements, students should review the university master's degree requirements (https://pdx.smartcatalogiq.com/2020-2021/Bulletin/Graduate-School/Degree-requirements/Master-s-Degree) . A minimum of 30 credits must be taken at Portland State University. Maintain good academic standing (https://pdx.smartcatalogiq.com/2020-2021/Bulletin/Graduate-School/Enrollment/Academic-Standing) with a cumulative graduate GPA of 3.00 or higher in all graduate credits earned at PSU. All graded courses must be passed with a grade of B- or better. Core requirements (#core requirements) must be passed with a grade of B or better. All courses taken Pass/No Pass must be passed. Coursework may include up to 6 credits of CS 505 (Reading and Conference) and CS 506 (Special Projects). CS 501 (Research), CS 502 (Independent Study), CS 504 (Internship), and CS 509 (Graduate Assistant Practicum) credits cannot be applied. Review the rules regarding CS 504 (Internship) (/../computer-science/node/276) . All coursework applied to the master's program must be completed within seven years prior to the awarding of the degree. If any credits are more than 7 years old at the time you apply for graduation, they may need to be re-validated (https://pdx.smartcatalogiq.com/2020-2021/Bulletin/Graduate-School/Degree-requirements/Master-s-Degree/Validation-of-out-of-date-graduate-credit) . Joint Campus Registration with OHSU Admitted graduate students at Portland State may take graduate courses offered by Oregon Health and Science University and have the credits included in their current term enrollment and tuition assessment at PSU. Only specific courses are approved for this joint campus arrangement (/../gradschool/joint-campus-registration) . Students must have permission from the instructor of the OHSU course as well as their home department to use the joint campus registration process and apply the OHSU courses to their PSU degree. Contact the CS Graduate Advisor ( gccs@pdx.edu (mailto:gccs@pdx.edu) ) for details. Graduation Procedure Follow the university's outline for Master's degrees (/../gradschool/summary-of-procedures-masters-degrees) . Apply for graduation by the first Friday of the first week of the anticipated term of graduation. See the Graduate Candidate Deadlines (/../gradschool/graduate-candidate-deadlines) for specific dates. Submit a revised Plan of Study (/../computer-science/sites/g/files/znldhr1671/files/2020-07/MS-Plan-of-Study.pdf) (if your coursework has changed since the initial filing) to the CS Graduate Advisor. For Thesis students, submit the GO-16M form (/../gradschool/forms) to the Graduate School. See the Graduate Candidate Deadlines (/../gradschool/graduate-candidate-deadlines) for specific dates.", "metadata": {"source": "https://www.pdx.edu/computer-science/master"}, "type": "Document"}, {"page_content": "Master's Track Courses As part of the degree requirements for the CS Master's program, students must complete three courses from one of the following tracks: Artificial Intelligence & Machine Learning Databases Languages & Programming Security Software Engineering Systems & Networking Track substitutions with other courses in the topic area may be permitted with the approval of the CS Graduate Advisor ( gccs@pdx.edu (mailto:gccs@pdx.edu) ). Artificial Intelligence & Machine Learning The Artificial Intelligence and Machine Learning track covers modern algorithms underlying intelligent and learning systems. Examples of topics covered in courses on this track include knowledge representation, planning, reasoning, combinatorial and adversarial search methods, natural language processing, computer vision, statistical machine learning, and evolutionary and reinforcement learning. CS 541 Artificial Intelligence (3) CS 545 Machine Learning (3) One course from the following: CS 542 Advanced Artificial Intelligence: Combinatorial Games (3)** CS 543 Advanced Artificial Intelligence: Combinatorial Search (3)** CS 546 Advanced Topics in Machine Learning (3) ** CS 570: Machine Learning Seminar (3) STAT 671: Statistical Learning I (3) STAT 672: Statistical Learning II (3) STAT 673: Statistical Learning III (3) SYSC 557 Artificial Life (4) OHSU CS 623 Deep Learning (3)* OHSU CS 562 Natural Language Processing* OHSU 5/692 Ethics in AI and Machine Learning Research* Any approved CS 510 Course in AI or Machine Learning (https://docs.google.com/spreadsheets/d/1Zzyb9E1zLwQ0TYErZfoW9i2BM83b_PFba6zWmzMELQs/edit#gid=0) *Courses taken through the Joint Campus Program (/../gradschool/joint-campus-registration) are considered transfer courses. Databases The Database track covers concepts, languages, implementation and application of database management systems. Other topics that have been offered in the track include formal foundations of databases, databases for cloud and cluster environments, and data stream systems. CS 586 Intro to Database Management Systems (3) Two courses from the following: CS 530 Internet, Web, & Cloud Systems (3) CS 587 Database Management System Implementation (3) CS 588 Cloud & Cluster Data Management (3) CS 589 Principles of Database Systems (3)** Any approved CS 510 course in Databases (https://docs.google.com/spreadsheets/d/1Zzyb9E1zLwQ0TYErZfoW9i2BM83b_PFba6zWmzMELQs/edit#gid=0) Languages & Programming The Languages & Programming track focuses on the design, implementation, and use of programming languages. It includes exposure to a variety of programming paradigms, experience using programming languages to express the essential abstractions of a problem domain, courses on programming language implementation, and the study of formal methods for specifying and reasoning about programs and programming languages. CS 558 Programming Languages (3) Two courses from the following: CS 515 Parallel Programming (3) CS 520 Object Oriented Programming (3)** CS 553 Design Patterns (3) CS 557 Functional Languages (3) CS 568 Functional Logic Planning (3)** CS 577 Modern Language Processors (3) CS 578 Program Language Semantics (3)** Any approved CS 510 course in Languages & Programming (https://docs.google.com/spreadsheets/d/1Zzyb9E1zLwQ0TYErZfoW9i2BM83b_PFba6zWmzMELQs/edit#gid=0) Security The Security track focuses on protecting computing systems and user data from unauthorized access and use. Topics include cryptography, network and host-based access control, vulnerability analysis, penetration testing, and reverse engineering. CS 591 Introduction to Computer Security (3) Two courses from the following: CS 530 Internet, Web, & Cloud Systems (3) CS 576 Computer Security Seminar (3)** CS 585 Cryptography (3) CS 592 Malware Reverse Engineering (3) CS 593 Digital Forensics (3)** CS 595 Web and Cloud Security (3) CS 596 Network Security (3) Any approved CS 510 course in Security (https://docs.google.com/spreadsheets/d/1Zzyb9E1zLwQ0TYErZfoW9i2BM83b_PFba6zWmzMELQs/edit#gid=0) Software Engineering The Software Engineering track studies the principles, processes, techniques, and tools for building software systems. Topics include software requirement, design, development, validation, and maintenance. CS 554 Software Engineering (3) Two courses from the following: CS 530 Internet, Web, & Cloud Systems (3) CS 552 Building Software Systems w/ Components (3)** CS 553 Design Patterns (3) CS 555 Software Specification & Verification (3)** CS 556 Software Implementation and Testing (3)** CS 561 Open-source Software Development (3) CS 565 Full Stack Web Development (3) Any approved CS 510 course in Software Engineering (https://docs.google.com/spreadsheets/d/1Zzyb9E1zLwQ0TYErZfoW9i2BM83b_PFba6zWmzMELQs/edit#gid=0) Systems & Networking The Systems and Networking track studies the design and implementation of operating systems, wired and wireless computer networks including high performance computer systems, data centers, cloud computing architectures, distributed systems, fault tolerance, concurrency, systems programming, and theoretical topics related to these areas. CS 533 Concepts of Operating Systems (3) CS 594 Internetworking Protocols (3) One course from the following: CS 515 Parallel Programming (3) CS 530 Internet, Web, & Cloud Systems (3) CS 531 Introduction to Performance (3) CS 535 Accelerated Computing (3) CS 538 Computer Architecture (3) CS 572 Operating Systems Internals (3)** CS 590 Introduction to Multimedia Computing and Networking (3) CS 598 Introduction to Wireless Network Protocols (3) ECE 586 Computer Architecture (4) Any approved CS 510 course in Systems & Networking (https://docs.google.com/spreadsheets/d/1Zzyb9E1zLwQ0TYErZfoW9i2BM83b_PFba6zWmzMELQs/edit#gid=0) *CS 532 does not count towards the track", "metadata": {"source": "https://www.pdx.edu/computer-science/masters-track-courses"}, "type": "Document"}, {"page_content": "Graduate Courses The following list contains all graduate courses that can appear on the Computer Science schedule, including selected courses offered by other departments. (The schedules for the 2023-2024 academic year (https://docs.google.com/spreadsheets/d/1MUwt5bKNNsas7O95b6x8ZyHO2ld4GekSJkRzboYe8cQ/edit?usp=sharing) are available, together with schedules for previous years (/../computer-science/computer-science-courses) .) Please note that some courses are experimental and may not be offered on a regular basis. These may be subject to change each academic year. Regular Courses: CS 515 Parallel Programming (https://docs.google.com/document/d/e/2PACX-1vSZFtavncSJZINNH74jSz9wBM95tv2SCHoFCEYl5RvDDCL4999dpZ4q9Hc4C5YyhbFdFEOZ30d9bEXi/pub) CS 518 Cultural Competence in Computing (https://docs.google.com/document/d/e/2PACX-1vRLzHp3sT6Zyi34gQ4ZgTT73HEMUS7Ghdl69gkoOcJCrdnNWHzujO5y6YgnuLYjx-IcPH1EcFKVR7F8/pub) CS 530 Internet, Web, & Cloud Systems (https://docs.google.com/document/d/e/2PACX-1vTVn5indfyG8xAtYf9RIwe1z6-u9eeQrD_gQWRx733xOsaa9Vw-su0poH8-7DD6GfyAqfoFVge6BHOq/pub) CS 531 Introduction to Performance Measurement, Modeling and Analysis (https://docs.google.com/document/d/e/2PACX-1vREduPR-XD_sxMtXp2ATYZlrotKNEw0OfVSUn5v0j-P7Lbi2MbxyJXueS7Sh1QbdSaVrA6d9SaobvBD/pub) CS 532 Operating System Foundations (https://docs.google.com/document/d/e/2PACX-1vTZb8iVKL_lssBoKnKXlRfv4IDQsNM2MkwmVWRb8r00AXqK8ZXWgugN4sjHVbEIcOBs0P6xfPl7MjzR/pub) CS 533 Concepts of Operating Systems (https://docs.google.com/document/d/e/2PACX-1vQShopinmQ8rBjXHkGQ3Zvkv-L99NtMNLFl9fndaC8_7L-uKm8u6lLZM3CuIHMgLeyPhKeUeOQ471tR/pub) CS 535 Accelerated Computing with GPU's and Xeon Phi (https://docs.google.com/document/d/e/2PACX-1vT4d3m3E5rI1unv5eP4oaHUZ44b-3NEDbzpfD_I_OtEEuzic7VWLmwcHpeDeuuPoJCxZtcL09segRyJ/pub) CS 538 Computer Architecture (https://docs.google.com/document/d/e/2PACX-1vQrXnGLmfM9TJ-dj1TP8GWGWx_cAVzwjjfYMShJ0nCHVMLRnri27yE5gnIn0gQ-chX651TrJwXg3ZfR/pub) CS 540 Deep Learning: Computational Structures and Programming (https://docs.google.com/document/d/e/2PACX-1vTXQbX9SS_Sg74u2fClYk6XBTCbXeZp2X91AZL5Z3FZTPhr7PNmJRo7e35RZ6jU9RfnNiUlFjA8wIJB/pub) CS 541 Artificial Intelligence (https://docs.google.com/document/d/e/2PACX-1vQ1QBwDS83fjcgD9Pla-_vwPlAY20lJqqD9FXnb8eqdEzkOtK76SVMxPIw3yLBww0nYKVxGhw7ljF9r/pub) CS 545 Machine Learning (https://docs.google.com/document/d/e/2PACX-1vRjWrqNhWVTnsHlMTXdzsCsIlgi0CtVYGnAecXXh4WZiOYJ24p4_G9EhSJr-t6aFq0O0_qEPFKbqNMW/pub) CS 547 Computer Graphics (https://docs.google.com/document/d/e/2PACX-1vSyZZPA-o0R6xpg65h5H1URC1oRk-ZgneUSrOoOBxQc7HUXAl8PzrufqlwUITDkqJtFNqwndPszfzBm/pub) CS 551 Numerical Computation (https://docs.google.com/document/d/e/2PACX-1vTbVi-MBP1exce4v3ZyhXIFcY1_Yw8qEITYavinjJB5te0HpINKdFnEsrVhqck_4cOP1MJOWoh-TiRP/pub) CS 554 Software Engineering (https://docs.google.com/document/d/e/2PACX-1vR3BieADnqTgY-jkJdV2lQx3Z8RBBErwR4OB-RurVhQnzdGESqvcah3jz-qL8AMxbMTdgr6QlHm3hew/pub) CS 557 Functional Programming (https://docs.google.com/document/d/e/2PACX-1vSInB4fmdJzycdWcsuCfRqBskHboSLyHta-6itbkXIk6IBmG9DHQZlwjTu4AJbtlZ-cAskgVbWPi-HD/pub) CS 558 Programming Languages (https://docs.google.com/document/d/e/2PACX-1vT84qveXMAr_HqMkId6ihutobS6yIS7cjppwZdU4lVc8AHbb7fz7SYIVKmVIkN-Va3oZXylgDu6aM7Z/pub) CS 563 Intro to Web Development (https://docs.google.com/document/d/e/2PACX-1vTgtHigx-Lt5JbMOquAAOI-dwzvcXm3IeWVbEen4b697Oa1SUQcz6d16KWNVtYtrPxCG6ohaGUF6Roi/pub) CS 564 Front End Web Development (https://docs.google.com/document/d/e/2PACX-1vQ3AGbQu6_aUeTpQy5marFRchZq9mkxoXQ4ADhqCT0n3lWzHxdVuE7CwaEvNmEU2nCiEnkv1KqqzRr1/pub) CS 565 Full Stack Web Development (https://docs.google.com/document/d/e/2PACX-1vQwD9pYjBCw-9dvNbZ5uCyZIoo9XXNBZE7E8YANP064ahVtwxK2O5FVVWQp8XRPxV0zZjZQU8J4RkDj/pub) CS 566 Voice Assistants (https://docs.google.com/document/d/e/2PACX-1vQtPBfR27Mke3I_aY3QorgNVvBfrpWl6luheKJxaihYqIwPmXXVhP34DCjO34VF24x5shQ5bH-FXUnR/pub) CS 569 Scholarship Skills for Computer Science & Engineering (https://docs.google.com/document/d/e/2PACX-1vShMHlnNU-LitlULgZjoUbVQB8xEy1ebO04pgfHaU0Iz3alBl5Xn8qZjhBvG8Ptuouiall7TTqr4-2I/pub) CS 576 Computer Security Research Seminar (https://docs.google.com/document/d/e/2PACX-1vSpPHJS8IDQamHd8Wj2y6_nzdTFdzIEpAwEZ43QUc_iR230hrOHLREbcQKBgcQ_eaCQ_SFIRlJco83g/pub) CS 577 Modern Language Processors (https://docs.google.com/document/d/e/2PACX-1vQECwhDpKRZwg0RQQmDaHx2NtBFv5ynAckvqgVMsz4NbiUfPo2riIC6NdJs5URPycLwIpL9LSf9dvVz/pub) CS 578 Programming Language Semantics (https://docs.google.com/document/d/e/2PACX-1vQAFpH-f4bL7ebv8xdmZ4K8IVk_mc8Onq2s8HjLWoc3cayfumvIUE4Xf0_S3gCI30_oR1-834OiuNTb/pub) CS 580 Randomized Algorithms and Probabilistic Analysis (https://docs.google.com/document/d/e/2PACX-1vSsPxMUtVTu2ceZzSHPRVjQm8bE0_Kng2jdeI-0zOh98IiPQ3H4Xt6SUq0NM7WfbmrUrpsq-3DAPE94/pub) CS 581 Theory of Computation (https://docs.google.com/document/d/e/2PACX-1vRqh_cQr1zVqZt6qUQI_pDXJvdmJ5ERtQ6PwhSnROvDwHS3W_iflnqSxETaFeysCZg1_RE4Qx4KacRh/pub) CS 584 Algorithm Design & Analysis (https://docs.google.com/document/d/e/2PACX-1vR8G8Kcn9_Q5pufxHFC9V0Y2XYjsaIqovuUHB-DyT_0oRUGkgwFyxo2s84c2YcWAlj20KUhys2SUAuk/pub) CS 585 Cryptography (https://docs.google.com/document/d/e/2PACX-1vTSW6QTvJbfvXiFRdm_mmxcUzBWJxGNinltESDtvCZrCaPmThAOV_OllkmIoEfvpwlC4KF_S8o7ojMc/pub) CS 586 Introduction to Database Management Systems (https://docs.google.com/document/d/e/2PACX-1vTlU2ThdsCQFCzO6N0x27_ZeiVdAXjWL2qpRzdaswEsGZQlZ4NIIPoYlGNINQYxdZyKBNT13Hp_2DAH/pub) CS 587 Database Management Systems Implementation (https://docs.google.com/document/d/e/2PACX-1vQk4m3I4xufMBhp2e0aaNAn3P9vKLjDy8hJcE5kzV4cwsofqRLM6a4VogP4RkPGorUHrJF37NX7uESE/pub) CS 588 Cloud & Cluster Data Management (https://docs.google.com/document/d/e/2PACX-1vR3bQoVzz4rHM987skzWeUyPQG4SUjUsQ_YjiYhoyFAFmjaISQCxXo9mtB_gfamyqkCeMyfxEKLBDFx/pub) CS 589 Blockchain Development & Security (https://docs.google.com/document/d/e/2PACX-1vRwAhkUpeIeoFAfzDuXuHPtOQajoBr5_JGe81d3762CM40etrwzL_oMrmWWLiSTAMPzXb83HpjhlVPK/pub) CS 590 Introduction to Multimedia Computing and Networking (https://docs.google.com/document/d/e/2PACX-1vQVWYtEoZSgcRCmnlsu4ac7ARoydZ6ZA759qkmtdF_YT7WmGw6SdMnkjyft_LisgvBrynphn2sYXLrW/pub) CS 591 Introduction to Computer Security (https://docs.google.com/document/d/e/2PACX-1vREuh6nhPCJiRkE_MZXnTB9FSD7Bg0XWdK8UmQnba8vF9QqhINWABDi7oQeHL8MotU7z4WMiPEro8Cc/pub) CS 592 Malware Reverse Engineering (https://docs.google.com/document/d/e/2PACX-1vS43cSAkyyyCt9VJuZISvwS5iGI0F3PcouIKTY1EIbQQolg-rFZ4ixwnRjnBlkbm0OAULWxucOEzOnV/pub) CS 593 Digital Forensics (https://docs.google.com/document/d/e/2PACX-1vSGVC8m7vTkQymb0_3ynwkmMf36bdRuCvzOzjnQj6yyk_3rdAtnakEd_TxF-xTudrKckn4AfgAFvA-2/pub) CS 594 Internetworking Protocols (https://docs.google.com/document/d/e/2PACX-1vSnp7VDZq4I8mYgx9b5F4kbCvArKN6GbQsYiPISwmWcQW3uV5HT0jtB8Dgj_Xmp3YIvSlOCc9R5MDKV/pub) CS 595 Web and Cloud Security (https://docs.google.com/document/d/e/2PACX-1vTeqha5ppnWgQLViQdjMbe9quI0nyOXSdY266kL_ob5DT5puXZ0Z2HdHEp5nXrSjSRnuvcyYmdCJe31/pub) CS 596 Network Security (https://docs.google.com/document/d/e/2PACX-1vRwDecq6YplzMtDS4kEQf7b-7cK3zibg0ufCsa0X_qAKST1qO0biayGx5JH1G5teTt-tGVUEGsbqPYu/pub) CS 658 Programming Languages (https://docs.google.com/document/d/e/2PACX-1vT84qveXMAr_HqMkId6ihutobS6yIS7cjppwZdU4lVc8AHbb7fz7SYIVKmVIkN-Va3oZXylgDu6aM7Z/pub) CS 669 Scholarship Skills for Computer Science & Engineering (https://docs.google.com/document/d/e/2PACX-1vShMHlnNU-LitlULgZjoUbVQB8xEy1ebO04pgfHaU0Iz3alBl5Xn8qZjhBvG8Ptuouiall7TTqr4-2I/pub) CS 676 Computer Security Research Seminar (https://docs.google.com/document/d/e/2PACX-1vSpPHJS8IDQamHd8Wj2y6_nzdTFdzIEpAwEZ43QUc_iR230hrOHLREbcQKBgcQ_eaCQ_SFIRlJco83g/pub) CS 677 Modern Language Processors (https://docs.google.com/document/d/e/2PACX-1vQECwhDpKRZwg0RQQmDaHx2NtBFv5ynAckvqgVMsz4NbiUfPo2riIC6NdJs5URPycLwIpL9LSf9dvVz/pub) CS 678 Programming Language Semantics (https://docs.google.com/document/d/e/2PACX-1vQAFpH-f4bL7ebv8xdmZ4K8IVk_mc8Onq2s8HjLWoc3cayfumvIUE4Xf0_S3gCI30_oR1-834OiuNTb/pub) CS 684 Algorithm Design & Analysis (https://docs.google.com/document/d/e/2PACX-1vR8G8Kcn9_Q5pufxHFC9V0Y2XYjsaIqovuUHB-DyT_0oRUGkgwFyxo2s84c2YcWAlj20KUhys2SUAuk/pub) Special Topic Courses (Active): CS 510 Top: Advanced Topics in C++ Programming (https://docs.google.com/document/d/e/2PACX-1vSX2AFoA6RtNLwbAJLcZTlnHIYiNaEAd866PdCxJ32HnQ0AAS9_Ygy4IUF1T0NbC8TVUStRrAC0sCCY/pub) CS 510 Top: Advanced Topics in Concurrency (https://docs.google.com/document/d/e/2PACX-1vQAhXXwV0bbFYrZQXZi9X_jgwrkYaqCubeeYYU4H9muJ0sVfitDd5OBR3-3k72ZIP1u520sLe6E8l_C/pub) CS 510 Top: Advanced Topics in Program Verification (https://docs.google.com/document/d/e/2PACX-1vTd_q-RC71dRY6i4VDiRrdzqgsPi65X_Y2834OVxLw-MZxzURsdEzoUskzov2LE3nUrBAOsOco3Vxhb/pub) CS 510 Top: Adventures in Natural Language Processing (https://docs.google.com/document/d/e/2PACX-1vQSkzKDZFLWPL20_oVugVVq2W6zGuO7VNbA6cM-zlS4VJUhECocHKyxgWkkNJjjCf5MxuChpyrxtCpc/pub) CS 510 Top: Code Large Language Models (https://docs.google.com/document/d/e/2PACX-1vQUOS5PJNd0o9ELK6b3Q2C5Yh6ndguraCFr4eCOKhxiC1lxRfJGEg5CS9hMKkMKN7VY_KJMxHEi0wOJ/pub) CS 510 Top: Code Reading & Review (https://docs.google.com/document/d/e/2PACX-1vRkxqzWsgIq8QWvrmZYrHX4rtZ1o1jz3Sl0M5tHR7sobDu1ODfDgfe33XjUNiwKi1keNnTLQrEG4pYS/pub) CS 510 Top: Programming Language Compilation (http://web.cecs.pdx.edu/~apt/510comp_ad) CS 510 Top: Computational Photography (https://docs.google.com/document/d/e/2PACX-1vRstX5cILPgcF7eUpazW7aRoGMpNuOMlMYWII2WDMNdCPvDMAySEJw_lgJsyYfUjdWrpIwW50ZOyKWz/pub) CS 510 Top: Computer Game Design (https://docs.google.com/document/d/e/2PACX-1vR34NYmtudDPJrzegwX4eQhcT5F-Pc2xAhGAiPWm5OPITyd5hM-wKQFIwF49XICXfcat55-RtYCWg_T/pub) CS 510 Top: Computer Vision and Deep Learning (https://docs.google.com/document/d/e/2PACX-1vTnrzTNw5ivFrmfHCQuOvF0j3NhMlDo86RS3BN7iJ0ncwtdR_qwqUfFTiHhJRUEq9537AkktZV9jYZa/pub) CS 510 Top: Computers, Sound and Music (https://docs.google.com/document/d/e/2PACX-1vRZWUTU-rYShZONhVnroFwej9-wXl6h2eGsNDLu_CAO-vu0X6nzT-x9oadf7kFQJtJKB0MNbeVEi8qs/pub) CS 510 Top: Contemporary Software Development with Java and Android (https://docs.google.com/document/d/e/2PACX-1vRJD5guEeIxcZu41_OGlfsDzqebHtJ_5spbmwxWDRXb1qIQw5F5NsNlCXcEnRydQW-4rIiuc5xVcIGe/pub) CS 510 Top: Data Clustering (https://docs.google.com/document/d/e/2PACX-1vRk1_jL-JoU8iCmmiCxx_ir7qMZidu6SHJ8J0ZPn6JwdJnRLy5f1aXhkItN_S5RnCwCTvq9cslxWSR3/pub) CS 510 Top: Data Engineering (https://docs.google.com/document/d/e/2PACX-1vTX9G6WLJ4ydQBI0RsyGI4Npc-vdLJ9eDPoccxYGnzrq6pxJT3fyEZ3tFMpNp-cD6IZC6rP3Ji9_bii/pub) CS 510 Top: Ethics in Artificial Intelligence (https://docs.google.com/document/d/e/2PACX-1vQk5bqV_iDSGRXk9-TfVVm8eKWvQ74q4qY9FPWTOrpzfKDWOTnNuhRTt-4ptXXhuJyyQBvrKsFjp3_c/pub) CS 510 Top: Exploring Fractals (https://docs.google.com/document/d/e/2PACX-1vSD00Ke6fJOFIK13XOl0kA0QgMfU5elZ32C1i2ewHFm0mT_u-kx5ld60mChvc06o7cKzB6ArAf3a_MX/pub) CS 510 Top: Formal Proof Foundations (https://docs.google.com/document/d/e/2PACX-1vRoWJ-YkZClOCOE4V9-2UNr-z2BPkugJGtQLd6seX32urJt1f1KFvR8hkwuF_HnkgSelqOjJojMFXii/pub) CS 510 Top: Foundations of Computer Vision (https://docs.google.com/document/d/e/2PACX-1vSG8-SIzp9aVcQHTbCtNibEUxqUhx_-gXA5fDKk6LOts9eYd9s2MrU2Qr7CCiSl83CyPCImCUpt0fE3/pub) CS 510 Top: Foundations of Emerging Technologies (https://docs.google.com/document/d/e/2PACX-1vQdbYq-rFYlvJBG0AE4Eiy-k-1cINwb2VEN8zT33vDsLUqK6ppN74cckz6NEGNjKLnQ6iRbTKcaSb1J/pub) CS 510 Top: Generative Security Applications (https://docs.google.com/document/d/e/2PACX-1vQwwiKdAKAxUh6ToYnkyVUX7TaTWxu95e7dLX5bLFSCwj5lzGyfKD-QIlMKgTdyAjeh5TQMCelOyr2R/pub) CS 510 Top: Graphical Models for Optimization and Learning (https://docs.google.com/document/d/e/2PACX-1vTvJjbNWWcsxDSfao1x1VAy-nrIftk56Iv9ENbbg9enY8L8H0uMnxh6r4WQKcMk4yNw4qW61MxbttRY/pub) CS 510 Top: Introduction to Computational Imaging (https://docs.google.com/document/d/e/2PACX-1vSTKKRjXpuFGM8h_s0fDNOkOOACtoONE0gTT2v0wNbX1qNJm038LveHXhWcgGvxPSWc7bVu-w-QZWzN/pub?urp=gmail_link) CS 510 Top: Introduction to Computational Photography (https://docs.google.com/document/d/e/2PACX-1vRdVyEB2he8O3uYvCTwrss63znTDKlhL4NgJYkH2QNoASy7BBnzND1Wz79HwQe6HwJnp-FQqeYx4pdB/pub) CS 510 Top: Introduction to Data Mining (https://docs.google.com/document/d/e/2PACX-1vQYiN7ErJIw4pU_f2IFUIHTEESrUgBUGJDNNi5V_y3x_OURYiSrhHFXXy27tDBDNyDSGdfwTRhDzHfS/pub) CS 510 Top: Introduction to Healthcare Data Analytics (https://docs.google.com/document/d/e/2PACX-1vQ-zs7HQOB_sL3m6TjLH_ETopFhjxOvySQR6xvAAyhwziX1NrKCqNIMGTaxEz-IpWYkSoDmYZZCvkHM/pub) CS 510 Top: Introduction to Privacy-aware Computing (https://docs.google.com/document/d/e/2PACX-1vTtu4HXMe4nO_H-FvBnmi4y8r5d2Q2hoVOc0rAQh4f_0iD2GPfjm2sGFolrCoMN1jfGpaHs9NT2Hd1T/pub) CS 510 Top: Introduction to Quantum Computing (https://docs.google.com/document/d/e/2PACX-1vSIK1nVf4agAO6r_2-oaEXOw85WrIxdGZt5oB-NInehl6Rr9rl1hU7TOtgJFlhprcp_kd7cUhGP9LlO/pub) CS 510 Top: Large Language Models (https://docs.google.com/document/d/e/2PACX-1vT5ISAnzoUv7w6tOBpPAVYvznbTnucvGZweEATbpcVZS2umLmZih78_3faNNKTydxl-uzFkRa0t9tEs/pub) CS 510 Top: Mobile and Wireless Networks (https://docs.google.com/document/d/e/2PACX-1vSJ_psm76TumAjoYLTWiODEs5A8du-O6AweOgFsXvaGBo8vLjd--GAXvDOcglJTue4HM-NfFjHNTr9U/pub) CS 510 Top: Mobile Health (https://docs.google.com/document/d/e/2PACX-1vQxbkh2lAmKswFaPPAehdZEXldkilIm8hlHDC1ro1mAQNUimTSNzWWYMkO6gRV-KBW7doyh03ahmHN9/pub) CS 510 Top: Mobile Health in the COVID Era (https://docs.google.com/document/d/e/2PACX-1vT9YO3GaudjdD2tcy_M1gtJlb2nHlRazyT5GHWAHAuMzTc39Y3VprYqCt3rzucNCgYmc4-fyZ3J7DI3/pub) CS 510 Top: Natural Language Processing (https://docs.google.com/document/d/e/2PACX-1vSGK3QIhAmWOGKmHQasSmeQBclplFZY_fThDLU__Eh5lYoouA3_R0dKcOSpyTb1DZxBiDejEvRno--x/pub) CS 510 Top: Networked Markets (https://docs.google.com/document/d/e/2PACX-1vSqG3VimymhYRgPWSn5sELgQmAa2PXTKgJR0jl9z2Vc2eRr3OafmG5nYqa0QR4dBaBeNCqVLgwqbYI0/pub) CS 510 Top: Operating System Internals (https://docs.google.com/document/d/e/2PACX-1vTsFBoH_nukivkmEh5VwxILaOvgLnwhe3pT_CdN4VUMHwLaJV-y8lI7wvbBPYbPVEbdzeaSgI4ikULg/pub) CS 510 Top: Programming Language Compilation (https://docs.google.com/document/d/e/2PACX-1vSgn92l0K7r7CJunBhOSAusX-mZxgShfYV6OoYqLfWafjoneotVuY88k7zwtkgnULTVDNAR-r-lkDy1/pub) CS 510 Top: Proof Assistants and Program Verification (https://docs.google.com/document/d/e/2PACX-1vSyngg-XZy3ukz_RFqNt5hRu6ojM8BpHkgkh_JlnZS5plTYbP5HEOrECUQmY_PekMby1IaJ05k8Bl9G/pub) CS 510 Top: Reinforcement Learning (https://docs.google.com/document/d/e/2PACX-1vQrhSXrGurKlOG5jhgdx9DTw9Pcn8jmjRYcS6xvM3qYKcU4TFIxmKV8YWd5DB-Qk9zi-aERk0Zg4jr5/pub) CS 510 Top: Rust for Small Systems Programming (https://docs.google.com/document/d/e/2PACX-1vSOsMpOEhG9hLxA8dnXVymgBCUJkdkggQbNqxd3crYQ9atRS16_cm7rdMzdTL2TuRsnHt8I3UaUmxNH/pub) CS 510 Top: Rust Programming (https://docs.google.com/document/d/e/2PACX-1vRpnHXPaN5HyaEEiv4uQTyWYjeHVfVYZyKl43nlhG1Z76T35lo4JbHwcw9E-1103IHQNUPrbIwptVxx/pub) CS 510 Top: Rust Web Development (https://docs.google.com/document/d/e/2PACX-1vQX3geESTOG-Mcy6daNsaap85SqBsYt0wtrnRl_A1llcs8JV0pOZgSSnVfbj2-_SbzP6lNPCAhftyNB/pub) CS 510 Top: Secure System Administration and DevOps (https://docs.google.com/document/d/e/2PACX-1vSHKtTXi7W4-tLMvMxoD5YnmXpIRTVyS72kmtW67tj4Hp65YCdi75Zna9bC6uyajPiUT9rG_6x7eZYP/pub) CS 510 Top: The Joy of Coding with Java and Android (https://docs.google.com/document/d/e/2PACX-1vTT0yQbtCo6i-FKaVwg_AYZNmrnUs2wK2sRbLCFFhfrGg3Ej1X23FclP5c8nYI5CgQKwdC8WJOr__cW/pub) CS 510 Top: Unconventional Cameras (https://docs.google.com/document/d/e/2PACX-1vSTKKRjXpuFGM8h_s0fDNOkOOACtoONE0gTT2v0wNbX1qNJm038LveHXhWcgGvxPSWc7bVu-w-QZWzN/pub?urp=gmail_link) CS 510 Top: Usability Engineering (https://docs.google.com/document/d/e/2PACX-1vQiLnzvmIKsv-r2eGnsqNd-t1l51PcRE4ZVbC3OB_XyDl1UUPp8R8hwwOLdgszdIlUyskox5oImJIrU/pub) CS 510 Top: Wireless Networks and Applications (https://docs.google.com/document/d/e/2PACX-1vTqBSKuvi2bwTsPuZnlRIRZVp9dT-DJOIn7iUyEEaptuolJKMoswiBflE-dMWQKRizkRGXifTBCAbkt/pub) CS 610 Top: Computational Photography (https://docs.google.com/document/d/e/2PACX-1vRstX5cILPgcF7eUpazW7aRoGMpNuOMlMYWII2WDMNdCPvDMAySEJw_lgJsyYfUjdWrpIwW50ZOyKWz/pub) CS 610 Top: Graphical Models for Optimization and Learning (https://docs.google.com/document/d/e/2PACX-1vTvJjbNWWcsxDSfao1x1VAy-nrIftk56Iv9ENbbg9enY8L8H0uMnxh6r4WQKcMk4yNw4qW61MxbttRY/pub) CS 510 Top: Virtual Reality (https://docs.google.com/document/d/e/2PACX-1vQ5VV_Uw9jP8a5dGIozj8ilGwUBPlXeWjo-4Q-EmgkZLkEnSftB_vweFQI-IoSyVPyPeuoP9-cS6TED/pub) Other Courses: CS 520 Object-Oriented Programming and Design (https://docs.google.com/document/d/e/2PACX-1vS2GkRAWBAcXKagjOk4dLDHIpp8gQS5i4ubHq9ggLShbj4Mh2bvPj3_XY1OWLRuMIVT0nG-7ISYLGSR/pub) CS 542 Advanced Artificial Intelligence: Combinatorial Games (https://docs.google.com/document/d/e/2PACX-1vSPl9onr81ezSAvoRrbLkn5Ym_acywrAPj3-VNvF-eL8vt3xb_e1N4Jcxfy86QMujMq8-AAqsKPs_bf/pub) CS 543 Advanced Artificial Intelligence: Combinatorial Search (https://docs.google.com/document/d/e/2PACX-1vROcIE4UPp_iF0QwTZWFI6UPOWOs05NJVhHsFg3ggOxh0HaNXVlzX9Zo1ZgZjiDO7O954kvwuMEyocK/pub) CS 546 Advanced Topics in Machine Learning (https://docs.google.com/document/d/e/2PACX-1vRQRF3lG5jFCXReC84LYQbGuKUG4DSeepQS5Rd8-38MSZ7ENlXBOVbraSPQ4pJyZKUrfNY7j3SPFZdi/pub) CS 549 Computational Geometry (https://docs.google.com/document/d/e/2PACX-1vS7kTWJwQSZeP5PjDCXSHK1Y9M0hnJPj1XtWSPvVfdes-eCNUQMByTuBVK3Ifihb9BQjQD_uYsXQv4A/pub) CS 550 Parallel Algorithms (https://docs.google.com/document/d/e/2PACX-1vQhidRk4QAg702WJNUlVn0SxRxGuZfu7kqHw0shhi6o1aQF4azKXCSJbJt5hbIagTGsXGTHYrdvh8_m/pub) CS 552 Building Software Systems with Components (https://docs.google.com/document/d/e/2PACX-1vTyu5rkO9k0XyoVPWzspq0_DNp2OJD4yw9IUMK4LpcIMma0xKHOat0av4quoeZi2DDxeZTPjipOeW1B/pub) CS 553 Design Patterns (https://docs.google.com/document/d/e/2PACX-1vSBP0SiBa1sHVxnQxra2_4o-mSdAglMpC2jZ_Y0Ni6U-obXQ8I2fkEE1Lqcs0GtiUT1Hl8qCfQc7_6Y/pub) CS 555 Software Specification and Verification (https://docs.google.com/document/d/e/2PACX-1vSPXf9GPCsk12iBLTYIl8RoUxNU2t9Svh3POWDqdSlU26_vJwQ0Lnmmf6IO3WIPkV-lP8VA4Wa38bHy/pub) CS 556 Software Implementation and Testing (https://docs.google.com/document/d/e/2PACX-1vRgCiC4mHVrDEd8KekKnHYHpiQIxE19IPoHUHpRmta9EyEJCmC5oaYZHed8VfsouxbK3hJpNiuLQ65c/pub) CS 559 Software Measurement & Models (https://docs.google.com/document/d/e/2PACX-1vRCg7B7L1c6gQr2s4v3NRj12ZjxY2MkqPwmMgJ2kauInZlSZZSeE5FndsguRewQ5uS2pZpjarfnnZZU/pub) CS 560 Human-Computer Interaction (https://docs.google.com/document/d/e/2PACX-1vSVoBI9OQa2T6eQeZr4RZCA0MWir4Jr57PH866UFPy_abJpbAeu_-pdqIl0Ahxep67tF3XHJU6LLRS1/pub) CS 561 Open Source Software Development Laboratory (https://docs.google.com/document/d/e/2PACX-1vT5G2NmHQUbNRw-wbGr4VWItPO1vi4uz8Nh3SuI67aT605IAt3x8JLltnrvIvrxSGXuhyRvhnlIGhz6/pub) CS 562 Advanced Open Source Software Engineering (https://docs.google.com/document/d/e/2PACX-1vTsvVwOxgODde55_oQxsXyWd74Tu7SwKkCJfGjwTXTroSpLRALnjD6sJ8lyqsiRuYLQX31PRBUjIbQf/pub) CS 567 The Wireless Web (https://docs.google.com/document/d/e/2PACX-1vRHjCuvwMiveA2cpUejcQeKwIbu3rj3JTkuPgHc37SYop8WeOA7fawk3gRrgogOOsGQK4TsM-m7PdH5/pub) CS 568 Functional Logic Programming (https://docs.google.com/document/d/e/2PACX-1vRFfGIchvbvmlu_7MmQJnDzu0lMGEoZLIdFTxBt0i9ji73XP3vUZ3xXnOKQEldALM_l3jbu7k-BueUf/pub) CS 570 Machine Learning Seminar (https://docs.google.com/document/d/e/2PACX-1vRnMVcBNyVb6GXeTbXNP-3OoFw_bT4zmAFT13Wzq3oT7sEYQWx2kIUrNIs4xQt5tHpcmo8YZdCxmdVC/pub) CS 572 Operating System Internals (https://docs.google.com/document/d/e/2PACX-1vRHYnZK71eyVMOL_1_gPW18rk4gmlJHj_kr7VFaNAMSNkUCABJ07jsWwbyq4p4i4DEjKHjQ8DXf6SW_/pub) CS 575 Computer Systems Analysis (https://docs.google.com/document/d/e/2PACX-1vSqaqxSWZ1nfISC0uRfdKmzND2tN6Z-VsuDF3i-KCHep-nGlPy5Kz5RIWpdKtIoF-d-iHZZlhFDK0dH/pub) CS 579 Formal Verification of Hardware/Software Systems (https://docs.google.com/document/d/e/2PACX-1vSglScU1qhc9V13gHQ--I8XcpwCjSkb63hNsC_btGnzuAIN0R6IJZNNndG8IJ4PbGQ2l4i83osK-RJf/pub) CS 582 Theory of Computation: Advanced Topics (https://docs.google.com/document/d/e/2PACX-1vSbcu5tLt2KjKYiXp5cL85MilzNbJRzf08RB7teijxNmwcmcRnep5DuhMJKl2q_oEvPe458qluXrZ4P/pub) CS 583 Automata and Formal Languages (https://docs.google.com/document/d/e/2PACX-1vTbapq9oNG5NM_FVCZYAAauq2FvZfzVblNTy_06RhgNClqKLA1yaR41_GlBB07ur9WIRHjj69Xz8BEk/pub) CS 597 Sensor Networks (https://docs.google.com/document/d/e/2PACX-1vQpDvlUO4SeHHTlk-qzvIJmn_17NNHoDC4zIM2Cgx8y8CeDBkoZOzHuIUpvb2XRyqDyZWgJ9EBhsmS9/pub) CS 598 Introduction to Wireless Network Protocols (https://docs.google.com/document/d/e/2PACX-1vSQjKm83xEFVfwSPWOLKEOVRdD9X6F105_rkgy0elNwPLQgRYvPFJAWU2wuCoAKyjD8VawFlhMb6Ozc/pub) CS 653 Design Patterns (https://docs.google.com/document/d/e/2PACX-1vSBP0SiBa1sHVxnQxra2_4o-mSdAglMpC2jZ_Y0Ni6U-obXQ8I2fkEE1Lqcs0GtiUT1Hl8qCfQc7_6Y/pub) CS 655 Software Specification and Verification (https://docs.google.com/document/d/e/2PACX-1vSPXf9GPCsk12iBLTYIl8RoUxNU2t9Svh3POWDqdSlU26_vJwQ0Lnmmf6IO3WIPkV-lP8VA4Wa38bHy/pub) CS 656 Software Implementation and Testing (https://docs.google.com/document/d/e/2PACX-1vRgCiC4mHVrDEd8KekKnHYHpiQIxE19IPoHUHpRmta9EyEJCmC5oaYZHed8VfsouxbK3hJpNiuLQ65c/pub) CS 659 Software Measurement & Models (https://docs.google.com/document/d/e/2PACX-1vRCg7B7L1c6gQr2s4v3NRj12ZjxY2MkqPwmMgJ2kauInZlSZZSeE5FndsguRewQ5uS2pZpjarfnnZZU/pub) CS 668 Functional Logic Programming (https://docs.google.com/document/d/e/2PACX-1vRFfGIchvbvmlu_7MmQJnDzu0lMGEoZLIdFTxBt0i9ji73XP3vUZ3xXnOKQEldALM_l3jbu7k-BueUf/pub) CS 672 Operating System Internals (https://docs.google.com/document/d/e/2PACX-1vRHYnZK71eyVMOL_1_gPW18rk4gmlJHj_kr7VFaNAMSNkUCABJ07jsWwbyq4p4i4DEjKHjQ8DXf6SW_/pub) Other Special Topic Courses: CS 510 Top: Advanced Functional Programming (https://docs.google.com/document/d/e/2PACX-1vTZR9rsNO63kpc52dMzvyuXxN79yYKqadibJ93FuSmzcHXZN00COX59WrBPrEuNL4Jj_R8EPdJzsDy8/pub) CS 510 Top: Advanced Java Programming (https://docs.google.com/document/d/e/2PACX-1vQ_qH_r2WVmYHQX0G-Imamriz-00khrQ7tnJyMVASJzw7KiUmDQg7eojOs6ymn11oqmTlPdnfKwQNmB/pub) CS 510 Top: Algorithms Coding (https://docs.google.com/document/d/e/2PACX-1vT80jlHUaM-ToNIJ7EGZt2Jv2wgcjnaZ5WzT6d8O4RFCT0rvRLu2bOTAdcUwMGiyJvr6GXwIK89d9Dm/pub) CS 510 Top: Generative AI (https://docs.google.com/document/d/e/2PACX-1vRxQRsdkifk4mqraTaXSu5o7NBNkQhh1Fn8uHkFt9TKvRK1g3o2_pCKNbvUpzqBx5HNey31FtmwOx-P/pub) CS 510 Top: Introduction to HCI (https://docs.google.com/document/d/e/2PACX-1vRtp72MybfA9L2tvamDc1_37gkDsj7C9dfIq0JBbuoyv7AWBZ0P7JBrMmxHBt0h-Ue2Eyq2tweaq1ak/pub) CS 510 Top: Introduction to Visual Computing (https://docs.google.com/document/d/e/2PACX-1vSAwVOr-aL99uTKmmKrWuCDpObBApwc4L-nbvp7seQa5zunkpM7vw4la5x_sT2BlU1iO-dYmcS27reG/pub) CS 510 Top: Languages and Low-Level Programming (https://docs.google.com/document/d/e/2PACX-1vQuC954L4zYpruCaH2L1evQqj0CwrXUZnuNhs8WZmrMBh8C7FdjveSyzWXOJbJU7_LQgHQynD6RSlWv/pub) CS 510 Top: Markets and the Internet (https://docs.google.com/document/d/e/2PACX-1vSrAPWiA1QhNDDP6iKfn0lDR4fMDMnOt1cZWq_pB8dggqEBMC5wcTRSpa8hUSkuxcdS2pG3RXdWPD9a/pub) CS 510 Top: Modern Agile and Other XP Software Engineering (https://docs.google.com/document/d/e/2PACX-1vSSIDv3Bst7u1qw5UDkGW8ddqMmhvDOBfPy7XxPA1v4iPKyrPSo2IdF1-st68H_nYnK3SW0UVl2PfoU/pub) CS 510 Top: Modern Embedded Computing (https://docs.google.com/document/d/e/2PACX-1vSYgIKwO5ISvBjtH7fzedhh1CoOQHoBYQM8MLajx7qUGRRZXOD_zcIEPsg6TzJDdycmd0b3Yd079IN8/pub) CS 510 Top: Network Security (https://docs.google.com/document/d/e/2PACX-1vS3UW_DfT1LxvrA-vslsKJWpGMDzPQ4gz_i75G3JSZBTCijxc_ALnyx0il5-C0zRAVul6v8eUF-qyqp/pub) CS 510 Top: Practicum in Asynchronous Systems and Algorithms (https://docs.google.com/document/d/e/2PACX-1vRMSsM3YdYchdHkaqz-zwBYmEjtzO3M--p_twafJl54tjAsSY3K7apU2joeQZsO3captXla1X-THeNX/pub) CS 510 Top: Software Design Patterns (https://docs.google.com/document/d/e/2PACX-1vSETfcRee4nxjwW4E1feaFOPpZ-19_d8hAKJNdGpWW9KxmaRIGeugt0BE0xCaRvpKVYw8Uxn1wpJykq/pub) CS 510 Top: Spoken Language Interfaces (https://docs.google.com/document/d/e/2PACX-1vTj1wS2bd27Ex6gqnlrEIHSZSSGlEoDOH3JXgIRxR6fXsUAn47lcWz7xj90-v3vhEjGD9lopp7Kvfv5/pub) CS 510 Top: Theorem Proving and Program Verification (https://docs.google.com/document/d/e/2PACX-1vR0IixS2_oOd8YHLbn9tAjuGsagoiwsizVNBxCs8kmdgNq4ufEwmw8TN6WE8czVzJQ4ZbLAUyDKiX6Y/pub) CS 510 Top: Topics in Software Validation (https://docs.google.com/document/d/e/2PACX-1vQElN71dabS3dz08qNaMrPanL0O7gnydP2X7uvehPeeNT3CiPbd6qiuwv9xJC8Hlz0DLBMDQn25RY6m/pub) CS 510 Top: Unit Test Branching Strategy (https://docs.google.com/document/d/e/2PACX-1vQGOJHeZ7kX2JOxNqGNkTOpF3oDDR8-lxA4ZMh2z0tRKgMrkc2wq-BIVz4MW5A8Px7Rsyjg5gErZvWd/pub) CS 510 Top: User Interfaces (https://docs.google.com/document/d/e/2PACX-1vTiTB_u7719HmZxSiO456i_LpzWNfcQ_M0F1vLYvV7-XAsLm4z8ESFtnA2OusQ6E9cgxHeY8sy1IB1e/pub) CS 510 Top: Compilers and Interpreters (https://docs.google.com/document/d/e/2PACX-1vQPJtXHbVOMCSM1gy57_onxlUVCLR1LsvSz-cU4jG8-stiH05sTx_g-aZFJ9I8SqKi2-hdQNPHAlMTt/pub) To review course descriptions of previously offered courses, please contact the instructor (https://ondeck.pdx.edu/computer-science/directory) or review the PSU Bulletin (https://ondeck.pdx.edu/academic-affairs/psu-bulletin) . CS Catalogs (https://docs.google.com/spreadsheets/d/1O4trXpMAaRxC_Dr9z7QkaLpcaCDpYU-Xgs_vBdSijnY/edit?usp=sharing) 2021-22 (https://docs.google.com/spreadsheets/d/1O4trXpMAaRxC_Dr9z7QkaLpcaCDpYU-Xgs_vBdSijnY/edit?usp=sharing) (https://docs.google.com/spreadsheets/d/13hNskr0kFIN2qgIQK-1mrgN6uZ9mMNNS7dErjgU3tH0/edit) 2020-21 (https://docs.google.com/spreadsheets/d/13hNskr0kFIN2qgIQK-1mrgN6uZ9mMNNS7dErjgU3tH0/edit) (https://docs.google.com/spreadsheets/d/1Ej6I6niDOwEjYqevOOi_05v7lrBJZIgW6YN8hXGAsE0/edit#gid=511554810) 2019-20 (https://docs.google.com/spreadsheets/d/1Ej6I6niDOwEjYqevOOi_05v7lrBJZIgW6YN8hXGAsE0/edit#gid=511554810) (https://docs.google.com/spreadsheets/d/13fHhL9wbInlUNFm5-Yp1wsimNp1Fl9FMg02om8J4ols/edit#gid=1731313124) 2018-19 (https://docs.google.com/spreadsheets/d/13fHhL9wbInlUNFm5-Yp1wsimNp1Fl9FMg02om8J4ols/edit#gid=1731313124) (https://docs.google.com/spreadsheets/d/1mKTXjt_iWOtjzQ8_D1JRWxksg07I62Rmfay_AFlrNL4/edit#gid=739953919) 2017-18 (https://docs.google.com/spreadsheets/d/1mKTXjt_iWOtjzQ8_D1JRWxksg07I62Rmfay_AFlrNL4/edit#gid=739953919) (https://docs.google.com/spreadsheets/d/1_MjPMjz_Ur2t5rJdbwltSNEwjAYeH5NyUCHsQ0NDKBI/edit#gid=0) 2016-17 (https://docs.google.com/spreadsheets/d/1_MjPMjz_Ur2t5rJdbwltSNEwjAYeH5NyUCHsQ0NDKBI/edit#gid=0) (https://docs.google.com/spreadsheets/d/1nD7h9VQTOmd8FUqW4J_e5GAa22T-JuYxWMSIBfHZJ30/edit#gid=0) 2022-23 (https://docs.google.com/spreadsheets/d/1nD7h9VQTOmd8FUqW4J_e5GAa22T-JuYxWMSIBfHZJ30/edit#gid=0)", "metadata": {"source": "https://www.pdx.edu/computer-science/graduate-courses"}, "type": "Document"}, {"page_content": "Thesis and Dissertation Information All graduate students who are doing a formal thesis or dissertation must follow PSU policies regarding committee appointments, defense procedures, formatting requirements, and submission procedures. These pages are intended to guide students through these various processes. Please review them carefully and feel free to contact us with questions at grad@pdx.edu (mailto:grad@pdx.edu) or 503-725-8410, Option 2. For committee, defense, and graduation questions, contact your processor in the Graduate School: Brenda Fugate, fugateb@pdx.edu (mailto:fugateb@pdx.edu) or (503) 725-5230 - master's students with PSU ID numbers ending 00-49 Andrea Haack, ahaack@pdx.edu (mailto:ahaack@pdx.edu) or (503) 725-8460 - master's students with PSU ID numbers ending 50-99 Roxanne Treece, treece@pdx.edu (mailto:treece@pdx.edu) or (503) 725-5241 - all doctoral students For thesis/dissertation formatting and submission questions, contact the Format Editor at etdinfo@pdx.edu (mailto:etdinfo@pdx.edu) . Electronic Thesis and Dissertation (ETD) Information Links (/gradschool/etd-formatting-requirements) Formatting (/gradschool/etd-formatting-requirements) (/gradschool/etd-publishing-options) Publishing (/gradschool/etd-publishing-options) (/gradschool/etd-submission-instructions) Submission (/gradschool/etd-submission-instructions) (/gradschool/etd-faqs) ETD FAQs (/gradschool/etd-faqs) (/gradschool/etd-and-format-review-resources) Resources (/gradschool/etd-and-format-review-resources) Committee Appointments The timing for the appointment of master's and doctoral committees is quite different. Doctoral committees are appointed early in the process, shortly before the proposal defense. Master's committees are appointed much later, approximately one term before the final defense. A student's thesis or dissertation committee is appointed with the GO-16 form (/gradschool/appointment-masters-thesis-or-doctoral-dissertation-committee-go-16-form) . The GO-16 webpage (/gradschool/appointment-masters-thesis-or-doctoral-dissertation-committee-go-16-form) provides full information about eligibility requirements for committee members. For doctoral students, the GO-16 should be submitted to the Graduate School a minimum of six weeks before the anticipated date of the proposal defense. For master's students, the GO-16 submission deadlines are based on the intended term of graduation ( view the deadlines (/gradschool/graduate-candidate-deadlines) ). If an already appointed committee needs to be revised, contact the Graduate School for assistance. Defense Procedures and Deadlines PSU policies regarding thesis and dissertation defenses apply to: A master's student's final defense A doctoral student's proposal defense (sometimes called a prospectus or colloquium) and final defense Students must deliver a final draft of their document to their entire committee no fewer than 14 days before the defense date. A defense may only be scheduled during the regular academic terms; for summer, this is the eight-week Summer Session. View final defense deadlines for the current academic year (/gradschool/graduate-candidate-deadlines) . A final defense after these deadlines will result in graduation in a subsequent term. A thesis or dissertation defense must take place in a meeting with the student and the entire, appointed committee. While it is expected that all members should be physically present, remote participation is permitted under specific conditions (/gradschool/remote-thesis-dissertation-participation) . It is incumbent on students and faculty to know that the committee has actually been approved by the Graduate School and who the appointed members are before any proposal or final defense is held. If there are questions about whether a committee has been approved or who the appointed members are, contact the Graduate School. Formatting Requirements All theses and dissertations must meet Graduate School formatting requirements (/gradschool/etd-formatting-requirements) . We encourage students to review the formatting requirements early in the thesis or dissertation process; it is much easier to properly format the document to these specifications from the beginning as opposed to changing all the formatting when preparing for submission. Submission Procedures and Deadlines Graduate students completing a thesis or dissertation must submit the final version of their document to the Graduate School. The final version is the document that has been approved by each of your committee members after all required post-defense edits have been made. The final version must also conform to the Graduate School's formatting requirements. Students often need to make formatting revisions after initial submission of their final thesis or dissertation to the Graduate School. If you have met the Thesis/Dissertation Submission deadline for your intended term of graduation, but need to make additional formatting revisions, you can still graduate in that term provided you submit the required revisions by the individualized deadline provided by the Graduate School during your format review. All theses and dissertations are submitted electronically to the Graduate School. For electronic thesis and dissertation (ETD) submissions, PSU uses the ProQuest ETD Administrator (https://www.etdadmin.com/main/home?siteId=207) . Students will need to create an account through this system to submit their ETDs. We have created submission instructions (/gradschool/etd-submission-instructions) for using the ProQuest ETD Administrator that guide you through the steps of creating an account and submitting your ETD. ETD submission deadlines for the current academic year are available here (/gradschool/graduate-candidate-deadlines) . A submission after these deadlines will result in graduation in a subsequent term. There are two paper forms that students are required to submit to accompany their ETDs. Neither of these forms have specific due dates, but you should aim to submit them to the Graduate School at approximately the same time you submit your ETD through the ProQuest ETD Administrator. You cannot be certified for graduation without submitting these completed forms to the Graduate School: The Thesis Signature Page (gradschool/forms) (for master's students) and Dissertation Signature Page (gradschool/forms) (for doctoral students) are used for your committee to formally approve the final, post-defense copy of your ETD. The ETD Access Form (gradschool/forms) is used to grant the PSU Library the non-exclusive right to make your ETD available through the Digital Repository. PhD students must also complete the online Survey of Earned Doctorates (SED). (EdD students do not complete the Survey.) Please register and complete the survey via the survey page on the SED website (https://sed-ncses.org) . The registration process will ensure that you fill out the correct survey based on the graduation month and year you provide during the registration process. When you register for the survey, an email will be sent to you that will allow you to access the survey. Once you have completed the survey, a confirmation email will be sent to the Graduate School. View the student brochure (https://sedsurvey.org/Content/pdf/Student_Brochure.pdf) , or explore the SED website (https://sedsurvey.org/) for more detailed information. The Graduate School will contact you after we have performed the initial format review of your ETD. Any required formatting revisions must be completed (and resubmitted through the ProQuest ETD Administrator) before you can be certified for graduation. Once you have graduated, no further changes can be made to your ETD. You were graduated in part because this document was approved by your committee and the Graduate School. Your ETD therefore becomes part of your academic record and cannot be changed after graduation, even to correct typos. Doctoral students only : Please note that you cannot participate in the Spring PSU Commencement ceremony unless you have been certified for graduation by the Graduate School. Again, we will be in touch.", "metadata": {"source": "https://www.pdx.edu/gradschool/thesis-and-dissertation-information"}, "type": "Document"}, {"page_content": "", "metadata": {"source": "https://pdx.smartcatalogiq.com/2020-2021/bulletin/graduate-school/degree-requirements/master-s-degree/"}, "type": "Document"}, {"page_content": "Graduate Preparation Apply to PSU (https://apply.pdx.edu/apply/) Apply to CS (https://portlandstate.qualtrics.com/jfe/form/SV_0Txx6SextQbdCwl) Postbac Info (https://docs.google.com/a/pdx.edu/forms/d/e/1FAIpQLSd8RrjXlK3t5IyOT3iIJGjec5WfvPmadMzlARcfR5ydH62wpw/viewform) Many graduates with degrees in fields other than Computer Science are interested in pursuing a M.S. in Computer Science. The Graduate Preparation (or \"Grad Prep\") Track can assist a high performing, motivated student in mastering the essential computer science core necessary to be successful in the Master's program. The Grad Prep Track consists of a Programming & Languages Core and a Theory Core, comprised of many of the same classes taken by undergraduate Computer Science majors. Some of these courses have the option to test out of by demonstrating mastery based on either prior academic preparation or professional/personal programming experience through a credit by exam process. We encourage all prospective students to attend one of our monthly CS Postbac Info sessions (https://docs.google.com/a/pdx.edu/forms/d/e/1FAIpQLSd8RrjXlK3t5IyOT3iIJGjec5WfvPmadMzlARcfR5ydH62wpw/viewform) first to learn more about our postbaccalaureate options (https://www.pdx.edu/computer-science/postbaccalaureate) . Contact the CS Graduate Advisor ( gccs@pdx.edu (mailto:gccs@pdx.edu) ) for any questions. Grad Prep Requirements To be eligible for admission to the CS Master's program, Grad Prep students must complete the following courses with a B or better. For Grad Prep students, the GRE is waived for the M.S. application (/../computer-science/node/151) . CS 199 Prog & Problem-solving: First Exploration (https://docs.google.com/document/d/e/2PACX-1vTC6H4vehqQECxEVHFM24_5AKj5ni-X-vmX01jOz8_GS-Sh-IuQH5yADlvDPuCfolLazJTzLFbq__rJ/pub) (4 credits)* CS 161 Intro to Programming & Problem-solving (https://docs.google.com/document/d/e/2PACX-1vT6wUfKY4wJd24wV8742HCWoS5vOqNk3E7oFjSS-OmQvWEfZLVOm6iGa4AGgZ2CdseYeUO6dhinFs1_/pub) (4 credits)* CS 162 Intro to Computer Science (https://docs.google.com/document/d/e/2PACX-1vSUgFVtj4EE4jCKjg9m6fKcfg_eHxHwSBYkcXmYXOrCWq8FTQWKL4U_zZP4SksTdp4N9g5MjTD0hLHS/pub) (4 credits)* CS 163 Data Structures (https://docs.google.com/document/d/e/2PACX-1vQ5wSMsXqss1t0Q7PZd3YhDQE0GFqPY78wnVq7riAEqy20PxN1aGAr-1nGpcj_bmlaKj8lJvvM11Hoz/pub) (4 credits) CS 205 System Programming & Architecture (https://docs.google.com/document/d/e/2PACX-1vTlRuiBW96eUzHuvLH2F7C2nQikt3ARDDCPLg52aUheq0ra83IjE2WlsKERgaeeeYX5a7qI6CeppnJD/pub) (4 credits) CS 250 Discrete Structures I (https://docs.google.com/document/d/e/2PACX-1vTu696PrTMbunuwni0V7whXtju6mbBAgvcygwV4huoEjmKV6EXLvnoVvG0Pzzdsie6Ids5P7b5TkkVb/pub) (4 credits) CS 251 Discrete Structures II (https://docs.google.com/document/d/e/2PACX-1vSufoea5_NlpebR3m8qyNAYbPFEfp_I0bz1S14b6ILSWZunqf0GfN0mPNi6jqk0AfWmCb59h9shnvN-/pub) (4 credits) CS 302 Programming Methodologies and Software Implementation (https://docs.google.com/document/d/e/2PACX-1vTKMw8UYNbf9zyOyb2fK83w-AbbZbauOezinAmzNPLMDkpJoNg2oWzajYEJzCs3pVTdNbtu-oQR4_Vk/pub) (4 credits) CS 333 Intro to Operating Systems (https://docs.google.com/document/d/e/2PACX-1vTY7JTkDIaEX48udgWQh3CPN3SJOEaIZp2br3mde3_t5qpFCLdlawDLi3GbCl5mHcxPgH9G-6aA5hTg/pub) (4 credits) OR CS 532 Operating Systems Foundations (https://docs.google.com/document/d/e/2PACX-1vTZb8iVKL_lssBoKnKXlRfv4IDQsNM2MkwmVWRb8r00AXqK8ZXWgugN4sjHVbEIcOBs0P6xfPl7MjzR/pub) (3 credits) CS 350 Algorithms and Complexity (https://docs.google.com/document/d/e/2PACX-1vRDyj919A9JDvEJ-pEyJVFLC2YyT247G5PKUdbQqAlXkdrcIGDPTvY5SVIV2pVJOHCP-2r9Nb4MLWBh/pub) (4 credits) *Based on prior experience, a student may begin with any of these courses. See Introductory Course Guide (https://www.pdx.edu/computer-science/sites/computerscience.web.wdt.pdx.edu/files/2023-10/CS-Introductory-Courses_0.pdf) for details. Admission to PSU To begin Grad Prep at PSU, prospective students must first apply for postbaccalaureate admission (/../admissions/postbaccalaureate) . Postbaccalaureate applications are processed as they are received, generally within 4-6 weeks. Sample Schedules Students who did not take math beyond pre-calculus in their prior coursework are strongly advised to take at least one such course (e.g. calculus, linear algebra, discrete math, etc.) prior to taking CS 250. This sample program (https://www.pdx.edu/computer-science/sites/g/files/znldhr1671/files/2023-07/Grad-Prep-Modest-Schedule.pdf) assumes the student has modest programming experience and an adequate mathematical background. This sample program (https://www.pdx.edu/computer-science/sites/g/files/znldhr1671/files/2023-07/Grad-Prep-NoExp-Schedule.pdf) assumes the student has no prior programming experience and a limited mathematical background. Frequently Asked Questions Is the admission process to the CS program selective? No. At this time, all students that meet the admission requirements are admitted to the CS program. Can I have courses in progress while I submit my application? Yes, courses required for admission may be in progress at the time of application. If the in-progress coursework is not completed with the appropriate grade by the end of the term, CS admission may be revoked and the student may be dropped from all upper division CS courses (see number 4 below). What if I am in my last course at a community college and the course is not on my PSU DARS? Submit a current unofficial transcript from the college that shows the course in progress and your name and attach it to your application. Once your grade is recorded for this class, send an official transcript to PSU Admissions. What does conditional admittance mean? Students that apply to the program with courses in progress and have met all the other requirements will be admitted to the CS program on the condition that they receive a passing grade for the required classes in progress. Students will be allowed to register for upper division CS courses. At the end of the admission term, grades for classes which were in progress will be checked and students that have not passed will have their admission revoked and administratively dropped from their upper division CS courses. Once I'm admitted to the CS program, will my tuition increase? Yes, the Maseeh College of Engineering and Computer Science charges a differential tuition for admitted students to pay for use of College resources. Details of tuition and fees are located on Student Finance page (/../student-finance/tuition) . What if I am denied admission? Consult the CS Graduate Advisor ( gccs@pdx.edu (mailto:gccs@pdx.edu) ). Depending on the reason for the denial, you may request a review by the CS Appeals Committee.", "metadata": {"source": "https://www.pdx.edu/computer-science/grad-prep"}, "type": "Document"}, {"page_content": "Cybersecurity Graduate Certificate The Cybersecurity Graduate Certificate program requires admission (/../computer-science/node/151) as a graduate student. The program requires 21 hours total of graduate classes. There are two core classes for a total of 6 hours. In addition, five elective classes must be taken for the needed additional 15 credit hours. Certificate Requirements Gain Admission to our Graduate CS Program as either an M.S. or Ph.D. candidate. Note that an M.S. candidate may choose to either get both an M.S. and the Cybersecurity Graduate Certificate, or just complete the Cybersecurity Graduate Certificate. Fill out the GO-19 form (/../gradschool/forms) needed for admission to the certificate program. Make sure you ADD a certificate to your program. You also need your advisor's signature on the form. Your advisor must approve your plan to get the Security Certificate. Please return the completed form to the Graduate Advisor. Once you have submitted your GO-19 form, the Security Admission Committee will meet and approve or deny your application. Applicants will be notified of the committee's decision via email. Course Requirements Required Core Courses (6) CS 591 Introduction to Computer Security (3) CS 595 Web and Cloud Security (3) Five of the following courses or approved substitute courses (15) CS 554 Principles of Software Engineering (3) CS 555 Software Specification and Verification (3) CS 556 Software Implementation and Testing (3) CS 576 Computer Security Seminar (3) CS 585 Cryptography (3) CS 592 Malware Reverse Engineering (3) CS 593 Digital Forensics (3) CS 594 Internetworking Protocols (3) CS 596 Network Security (3) Any CS 510 course in Security (3) (https://docs.google.com/spreadsheets/d/1Zzyb9E1zLwQ0TYErZfoW9i2BM83b_PFba6zWmzMELQs/edit#gid=0)", "metadata": {"source": "https://www.pdx.edu/computer-science/cybersecurity"}, "type": "Document"}, {"page_content": "Doctor of Philosophy (Ph.D.) The Doctor of Philosophy (Ph.D.) is the highest degree offered in any discipline. It is intended for those who will pursue research in the field. The degree is usually required to teach computer science at the university level, and for employment in prestigious industrial research laboratories. Students may enter the doctoral program with a bachelor's degree or with a master's degree, and must have adequate background in computer science. Since completion of the degree requires presentation of a dissertation comprising of original research, the time required is pre-determined. Four to six years of full-time work are typical, less if the student enters with a Master's degree in computer science. Advising Upon admission to the doctoral program, a faculty adviser will be designated by the CS Director of graduate studies to advise and meet the student in regular consultation concerning the program of study and research. Your CS faculty adviser approves the courses in your program, including non-CS courses and courses taken outside of PSU. Students and their advisers will fill out a Ph.D. Plan of Study form (/../computer-science/sites/g/files/znldhr1671/files/2020-07/PhD-Plan-of-Study.pdf) after the student successfully completes 9 graduate level credits, no later than 6 months before their Research Proficiency Exam (RPE) (/../computer-science/node/176) . Doctoral students are also assigned to additional faculty members that make up an advisory committee during their first term. The role of the committee is to monitor the student's progress, to offer academic guidance, and to provide a resource in resolving academic or advising issues. The advisory committee consists of three faculty members, but they may come from different research areas of the faculty adviser. The committee will meet with the student in the Fall and Spring terms to generate a written assessment of progress and to set goals in writing for the next term. The committee, in consultation with the CS director of graduate studies, has the authority to delay a student's RPE date. The committee's opinion shall have strong weight in determining whether the student should continue to receive departmental support in the form of a teaching assistantship. The advisory committee's role is taken over by the dissertation committee when the student advances to candidacy. When a doctoral student begins research work on a PhD dissertation, the faculty adviser should be the person that will supervise the dissertation. If a new faculty adviser has been identified, submit a ' Change of Advisor form (/../computer-science/sites/g/files/znldhr1671/files/2020-07/Adviser-Change-Form.pdf) ' to the CS Graduate Advisor ( gccs@pdx.edu (mailto:gccs@pdx.edu) ). The faculty adviser must be a full-time faculty member and must agree to the change. Any changes should be properly recorded and processed by the CS department. Graduate Assistantships First-year Ph.D. students who are admitted with financial support are typically supported as a Teaching Assistant for up to three quarters, which typically pays a monthly stipend and a tuition remission. The student might teach a course under the supervision of a faculty member or grade papers for approximately 15-20 hours per week. Ph.D. students may apply to serve as a TA for an additional three quarters, but are highly encouraged to connect with a potential faculty adviser for a research assistantship. Apply for TA-ship Curriculum Core Courses (18 credits) - Generally expected to be completed by the end of the second year. CS 581 Theory of Computation (3) CS 684 Algorithm Design & Analysis (3) CS 558 Programming Languages (3) CS 533 Concepts of Operating Systems (3) CS 538 Computer Architecture or ECE 585 & ECE 586 (3) CS 669 Scholarship Skills for Computer Science & Engineering (3) Other Elective Courses (27 credits) Any graduate level courses in Computer Science, subject to guidance listed under Departmental Requirements CS 601 Research or Other Elective Credits (18 credits) CS 603 Dissertation Research Credits (27 credits) Departmental Requirements In addition to the departmental requirements, students should review the university's doctoral degree requirements (https://pdx.smartcatalogiq.com/2020-2021/Bulletin/Graduate-School/Degree-requirements/Doctoral-Degree) . Maintain good academic standing (https://pdx.smartcatalogiq.com/2020-2021/Bulletin/Graduate-School/Enrollment/Academic-Standing) with a cumulative graduate GPA of 3.00 or higher in all graduate credits earned at PSU. All regular courses must be graded (not P/NP) and passed with a grade of B or better. Maintain a 3.5 GPA in core course work, with a minimum grade of B. Research, projects, internships, independent study and reading & conference credits may be graded P/NP or with a letter grade. These credits are set up independently by the student and a faculty member. These credits must be passed with a P or a grade of B or better. Students must be registered for a minimum of 1 graduate credit during the term the comprehensive exam is taken. For elective courses: These courses should be used to strengthen the program in the student's research area. CS 501/601 (Research) and CS 509/609 (Graduate Assistant Practicum) may not be counted. A maximum of 6 credits of CS 502/602 (Independent Study), CS 505/605 (Reading and Conference), and CS 506/606 (Special Projects) may be counted. Advancement to Candidacy A student is advanced to candidacy after passing the comprehensive exam and successful defense of the dissertation proposal. Comprehensive Examination The comprehensive exam is a university requirement for the doctoral degree. In the CS Department, it takes the form of the Research Proficiency Examination (RPE), covering original research performed by the student. The exam consists of a written paper, public oral presentation, and a public question and answer session. Passing the exam is required before a PhD student can prepare and defend a dissertation. Review more about the comprehensive exam on our Research Proficiency Exam (/../computer-science/node/176/) page. Dissertation Proposal After passing the comprehensive exam and identifying a dissertation research topic, a dissertation committee will be appointed to the student and will take over the role of the advisory committee (see Advising section above). If the research topic has changed since admission, students should change their faculty adviser to the person that will supervise the dissertation. If a new faculty adviser has been identified, submit a 'change of advisor form' to the Graduate Advisor ( gccs@pdx.edu (mailto:gccs@pdx.edu) ). Any changes should be properly recorded and processed by the Computer Science office. The proposal: Identifies the general research field (e.g. networks) and presents an annotated bibliography of literature relevant to the particular dissertation topic (e.g. verification of network routing protocols). Describes the research problem. Describes the proposed approach to solving the problem, including specific methods to be tried. Gives a timeline for completing the work. The written proposal will be circulated among the dissertation committee, and upon satisfactory agreement, the student will publicly present the proposal. The presentation begins with an oral talk, then the dissertation committee will question the student privately. Students satisfactorily progressing are expected to have a dissertation proposal approved by the end of the third year. The abstract and date for the defense must be submitted to the CS Graduate Advisor at least two weeks in advance of the date of the defense. Dissertation Defense Under the direction and consultation of the dissertation committee, Ph.D. candidates must complete a dissertation consisting of original research. The student will prepare, revise, and correct a draft of the dissertation as directed by the dissertation committee until it meets the approval. The work is expected to be a quality of merit publication in refereed journals or conferences. After preparation of the written dissertation, a candidate's dissertation committee will conduct a dissertation defense. The candidate is expected to prepare an oral presentation on the research methodology and results. The abstract and date for the defense must be submitted to the CS Graduate Advisor at least two weeks in advance of the date of the defense. The final, approved dissertation should be submitted to csoffice@pdx.edu (mailto:csoffice@pdx.edu) for posting. PSU has a set of Dissertation Guidelines (/../gradschool/thesis-and-dissertation-information) that describe the format and content requirements for the dissertation. Graduation Procedures Follow the university's outline for Doctoral degrees (/../gradschool/summary-of-procedures-doctoral-degrees) . Apply for graduation (/../gradschool/applying-for-graduation) by the first Friday of the first week of the anticipated term of graduation. Submit a revised Plan of Study (/../computer-science/sites/g/files/znldhr1671/files/2020-07/PhD-Plan-of-Study.pdf) to the CS Graduate Advisor ( gccs@pdx.edu (mailto:gccs@pdx.edu) ). Submit the GO-17D (/../gradschool/forms) form to the CS Graduate Advisor. (/computer-science/../gradschool/graduate-candidate-deadlines) Graduate Candidate Deadlines (/computer-science/../gradschool/graduate-candidate-deadlines)", "metadata": {"source": "https://www.pdx.edu/computer-science/doctor-philosophy-phd"}, "type": "Document"}, {"page_content": "Research Proficiency Examination Every Ph.D. student is required to take the Research Proficiency Exam (RPE) by the end of their second year at PSU. This will satisfy the comprehensive exam requirement, which measures a Ph.D. student's knowledge within their domain of research. Years are counted from the term in which the student enters the Ph.D. program. Extensions to the two-year period may be granted by a Ph.D. student's advisory committee in consultation with the CS director of graduate studies. Part-time students may routinely obtain an extension to three years. Note, the university limit is 5 years if entering with a MS degree and 7 years otherwise. Students must be registered for a minimum of 1 graduate credit in each term they are taking or working on the RPE. The RPE exam consists of a written research paper and an oral presentation: With the approval of the CS director of graduate studies, a Ph.D. student is assigned to a 3-person committee created by the student's faculty advisor. The committee members must be knowledgeable in the research area. If appropriate, one member of the committee may be a faculty member from a different department or institution. The Ph.D. student conducts research on a problem and writes a paper that is in a form appropriate for publication at a conference or workshop in that research area. Standard formatting can be used as appropriate for that area. The student schedules the RPE presentation with the RPE committee. Presentations can take place at any time during the academic year, and do not need to be coordinated with each other. The presentation is open to all and the paper must be circulated to the faculty a week before the presentation. The presentation is 45 minutes for the talk followed by 15 minutes for questions. The format is that of a typical technical talk that first motivates the problem, then describes related work, followed by the research contributions. The RPE committee decides on a Pass/Fail/Retake: A pass needs to be agreed upon unanimously by the RPE committee. In case of a retake, the student needs to address the committee's feedback and retake the exam within six months. The exam can only be taken twice. Relevant Documents RPE Checklist (/../computer-science/sites/g/files/znldhr1671/files/2020-07/RPE-Check-List.pdf) - To be filled out at the time of applying to take the RPE. RPE Result Report (/../computer-science/sites/g/files/znldhr1671/files/2020-07/RPE-Result-Report.pdf) - Used by an RPE committee to report the result of the exam.", "metadata": {"source": "https://www.pdx.edu/computer-science/research-proficiency-examination"}, "type": "Document"}, {"page_content": "Computer Science 120 Fourth Avenue Building 503-725-4036 www.pdx.edu/computer-science/ B.S.--Computer Science Minor in Computer Science M.S.--Computer Science Ph.D.--Computer Science Graduate Certificate in Computer Security The Department of Computer Science offers a full range of courses and degree programs that are designed to provide students with the educational background to achieve a career in the computing industry. We offer a community to learn, discover, innovate, and share a curriculum based on the application and theoretical foundations of Computer Science. Our faculty members specialize in a variety of research areas such as artificial intelligence & machine learning; computer science education; computer security & privacy; computer vision & computer graphics; data science; natural language processing; programming languages & formal methods; software engineering; systems & networking; and theory. Up one level Maseeh College of Engineering and Computer Science In this section Undergraduate program Graduate Programs Computer Science (CS) Courses", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/maseeh-college-of-engineering-and-computer-science/computer-science/", "title": "\r\n\tPortland State University\u00a0-\u00a0Computer Science\r\n", "language": "en"}, "type": "Document"}, {"page_content": "Graduate Programs Admissions requirements Computer Science M.S. Computer Science Ph.D. Cybersecurity Graduate Certificate", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/maseeh-college-of-engineering-and-computer-science/computer-science/graduate-programs", "title": "\r\n\tPortland State University\u00a0-\u00a0Graduate Programs\r\n", "language": "en"}, "type": "Document"}, {"page_content": "Graduate Programs Admissions requirements Computer Science M.S. Computer Science Ph.D. Cybersecurity Graduate Certificate Computer Science M.S. The Master's program in computer science is designed to prepare students for advanced careers in the computer industry, to create a research environment in computer science, and to prepare students for graduate work at the Ph.D. level. See University Master's degree requirements. The Master's program in computer science consists of two options. The first option involves the completion of an approved program of 45 credits. The second option requires the completion of an approved program of 45 credits, which includes 6 to 9 credits of thesis. In both options, the coursework includes core courses in theory and programming practice, plus a 9-credit concentration in one of the tracks described below. For the thesis option, successful completion of a final oral examination covering the thesis is required. For more information, visit: https://www.pdx.edu/computer-science/master . Core Course Requirement One theory course from: CS 581 Theory of Computation 3 CS 584 Algorithm Design and Analysis 3 CS 578 Programming Language Semantics 3 Total Credit Hours: 3 One programming practice course from: CS 558 Programming Languages 3 Or any 500-level course designated by the department as a \"Programming Intensive\" course, as indicated by the \"P\" suffix in the corresponding 400-level course number. Total Credit Hours: 3 Electives Students must take enough electives to complete 45 total credits for the Master's degree. Electives can be any 500-level CS course and may include up to 6 credits of CS 505 (Reading and Conference) and CS 506 (Special Projects). CS 501 Research, CS 502 Independent Study, CS 504 Internship, and CS 509 Practicum credits cannot be applied. A limited number of credits taken outside Computer Science can count towards the elective requirements, with advisor approval. A minimum of 30 credits must be taken in Computer Science at Portland State University. Given this, students may use a combined total of 15 pre-admission, transfer, and non-CS credits toward their Master's degree with advisor approval. One additional credit beyond the 15 credit limit can be used provided none of the courses are a 1-credit course. Pre-admission credits (taken before the term of formal admission) can include both transfer and PSU credits. Pre-admission credits taken at PSU are requested via a DARS exception submitted to the Graduate School. This request should be made soon after admission to the graduate program. Transfer credits refer to credits taken from another institution other than PSU. To request approval of transfer credits, complete and submit the GO-21M form (Proposed Transfer Credit) to the CS Graduate Advisor. Students should submit the GO-21 form during the first term of enrollment in the program, so there is sufficient time to complete any additional coursework that may be necessary. Any transfer credits must be approved before graduation paperwork can be processed. OHSU joint campus credits are considered transfer credits and are transferred via a different process. For more information, visit: www.pdx.edu/gradschool/joint-campus-registration . Non-CS credits taken outside of Computer Science, such as ECE or Math, can count towards elective requirements once approved. Students should obtain advisor approval in advance to avoid the risk of taking a course that will not be approved. To request approval, submit a plan of study with the courses listed to the Graduate Advisor. Non-CS courses must be graduate level. All ETM courses are eligible to transfer but students are limited to using only one for the CS degree requirements. Total Credit Hours: 30 Track Requirement Take three courses from one of the following tracks: Databases Covers concepts, languages, implementation and application of database management systems. Other topics that have been offered in the track include formal foundations of databases, databases for cloud and cluster environments, and data stream systems. CS 586 Introduction to Database Management Systems 3 And two courses from the following*: CS 530 Internet, Web, & Cloud Systems 3 CS 587 Database Management Systems Implementation 3 CS 588 Cloud and Cluster Data Management 3 CS 589 Blockchain Development & Security 3 *Or any approved CS 510 course in Databases. Languages and Programming Focuses on the design, implementation, and use of programming languages. It includes exposure to a variety of programming paradigms, experience using programming languages to express the essential abstractions of a problem domain, courses on programming language implementation, and the study of formal methods for specifying and reasoning about programs and programming languages. CS 558 Programming Languages 3 Two courses from the following*: CS 515 Parallel Programming 3 CS 520 Object-Oriented Programming & Design 3 CS 553 Design Patterns 3 CS 557 Functional Programming 3 CS 578 Programming Language Semantics 3 *Or any approved CS 510 course in Languages and Programming. Security Focuses on protecting computing systems and user data from unauthorized access and use. Topics include cryptography, network and host-based access control, vulnerability analysis, penetration testing, and reverse engineering. CS 591 Introduction to Computer Security 3 Two courses from the following*: CS 530 Internet, Web, & Cloud Systems 3 CS 576 Computer Security Research Seminar 3 CS 585 Cryptography 3 CS 592 Malware Reverse Engineering 3 CS 593 Digital Forensics 3 CS 595 Web and Cloud Security 3 CS 596 Network Security 3 *Or any approved CS 510 course in Security. Software Engineering Studies the principles, processes, techniques, and tools for building software systems. Topics include software requirement, design, development, validation, and maintenance. CS 554 Software Engineering 3 Two courses from the following*: CS 530 Internet, Web, & Cloud Systems 3 CS 552 Building Software Systems with Components 3 CS 553 Design Patterns 3 CS 555 Software Specification and Verification 3 CS 556 Software Implementation and Testing 3 CS 561 Open Source Software Development Laboratory 3 *Or any approved CS 510 course in Software Engineering. Systems and Networking Studies the design and implementation of operating systems, wired and wireless computer networks including high performance computer systems, data centers, cloud computing architectures, distributed systems, fault tolerance, concurrency, systems programming, and theoretical topics related to these areas. CS 533 Concepts of Operating Systems 3 CS 594 Internetworking Protocols 3 One course from the following*: CS 515 Parallel Programming 3 CS 530 Internet, Web, & Cloud Systems 3 CS 531 Introduction to Performance Measurement, Modeling and Analysis 3 CS 535 Accelerated Computing 3 CS 538 Computer Architecture 3 CS 572 Operating System Internals 3 CS 590 Introduction to Multimedia Computing and Networking 3 CS 598 Introduction to Wireless Network Protocols 3 ECE 586 Computer Architecture 4 *Or any approved CS 510 course in Systems and Networking. Artificial Intelligence and Machine Learning Covers modern algorithms underlying intelligent and learning systems. Examples of topics covered in this track include knowledge representation, planning, reasoning, combinatorial and adversarial search methods, natural language processing, computer vision, statistical machine learning, and evolutionary and reinforcement learning. CS 541 Artificial Intelligence 3 CS 545 Machine Learning 3 One course from the following*: CS 542 Advanced Artificial Intelligence: Combinatorial Games 3 CS 543 Advanced Artificial Intelligence: Combinatorial Search 3 CS 546 Advanced Topics in Machine Learning 3 CS 570 Machine Learning Seminar 1 Stat 671 Statistical Learning I 3 Stat 672 Statistical Learning II 3 Stat 673 Statistical Learning III 3 *Or any approved CS 510 course in Artificial Intelligence or Machine Learning. Total Credit Hours: 9 Total Credit Hours: 45 Cumulative Graduate GPA Students must have a graduate GPA of 3.0 or above in all graduate level coursework taken at PSU to graduate from a master's degree, doctoral degree, or graduate certificate program at PSU. Degree Program GPA Students must have a GPA of 3.0 or above in all courses being used to meet the degree requirements. All graded courses must be passed with a grade of B- or better. Core requirements must be passed with a grade of B or better. All courses taken Pass/No Pass must be passed. Students must have the minimum number of credits needed for their degree before they can graduate. Application for Graduation Students must apply for graduation no later than the first Friday of the term in which they wish to graduate. Information about applying for graduation can be found at: https://www.pdx.edu/gradschool/applying-for-graduation .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/maseeh-college-of-engineering-and-computer-science/computer-science/graduate-programs/computer-science-m-s", "title": "\r\n\tPortland State University\u00a0-\u00a0Computer Science M.S.\r\n", "language": "en"}, "type": "Document"}, {"page_content": "Graduate Programs Admissions requirements Computer Science M.S. Computer Science Ph.D. Cybersecurity Graduate Certificate Cybersecurity Graduate Certificate The cybersecurity certificate program requires admission as a graduate student, similar to admission to the Master's program, in the Computer Science department. The program requires 21 total credits of graduate classes. There are two core classes for a total of 6 credits. In addition, five elective classes must be taken for the needed additional 15 credits. In summary, seven total graduate classes must be taken; two are core and five are electives. Required Core Courses CS 591 Introduction to Computer Security 3 CS 595 Web and Cloud Security 3 Total Credit Hours: 6 Five of the following courses*: CS 554 Software Engineering 3 CS 555 Software Specification and Verification 3 CS 556 Software Implementation and Testing 3 CS 576 Computer Security Research Seminar 3 CS 585 Cryptography 3 CS 592 Malware Reverse Engineering 3 CS 593 Digital Forensics 3 CS 594 Internetworking Protocols 3 CS 596 Network Security 3 *Or any CS 510 course in Security. Total Credit Hours: 15 Total Credit Hours: 21", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/maseeh-college-of-engineering-and-computer-science/computer-science/graduate-programs/cybersecurity-graduate-certificate", "title": "\r\n\tPortland State University\u00a0-\u00a0Cybersecurity Graduate Certificate\r\n", "language": "en"}, "type": "Document"}, {"page_content": "Graduate Programs Admissions requirements Computer Science M.S. Computer Science Ph.D. Cybersecurity Graduate Certificate Admissions requirements To be considered for admission to the graduate program in computer science, the student must have a four-year baccalaureate degree from an accredited institution. Prospective graduate students are not required to have a bachelor's degree in Computer Science, but they must make up the background needed for graduate study before applying for admission. The Grad Prep program described at https://www.pdx.edu/computer-science/grad-prep may be helpful in developing knowledge of the core curriculum of an undergraduate computer science degree. A cumulative undergraduate GPA of at least 3.00 is required. See the CS graduate admissions webpage for the admission and application requirements: https://www.pdx.edu/computer-science/graduate-admission . Students may apply to the Ph.D. program with or without having already obtained an M.S. in computer science.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/maseeh-college-of-engineering-and-computer-science/computer-science/graduate-programs/admissions-requirements", "title": "\r\n\tPortland State University\u00a0-\u00a0Admissions requirements\r\n", "language": "en"}, "type": "Document"}, {"page_content": "Graduate Programs Admissions requirements Computer Science M.S. Computer Science Ph.D. Cybersecurity Graduate Certificate Computer Science Ph.D. The doctoral degree program in Computer Science is designed to prepare students for advanced research or university teaching in the field. See University doctoral degree requirements. The student must complete an approved program of 90 graduate credits, including 18 credits of core courses and 27 credits of dissertation research. To be admitted to Ph.D. candidacy, a student must pass the Research Proficiency Examination (RPE) and must present an acceptable dissertation proposal. The dissertation comprises original research work, which is expected to be of a quality meriting publication in a refereed journal or conference. For more information, visit: www.pdx.edu/computer-science/doctor-philosophy-phd.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/maseeh-college-of-engineering-and-computer-science/computer-science/graduate-programs/computer-science-ph-d", "title": "\r\n\tPortland State University\u00a0-\u00a0Computer Science Ph.D.\r\n", "language": "en"}, "type": "Document"}, {"page_content": "Undergraduate program The undergraduate computer science program is designed to provide students with the educational background required for a professional career in the computing industry and for further study at the graduate level. The program includes a core of required courses and an elective program of courses over a wide range of topics. Seniors work in teams to carry out community-based projects during the two-term capstone course in software engineering. The undergraduate Computer Science program is accredited by the Computing Accreditation Commission of ABET, https://www.abet.org , under the General Criteria and the Computer Science and Similarly Named Computing Program Criteria. Degree Maps and Learning Outcomes Program Objectives Admission requirements Computer Science B.S. Computer Science Minor Computer Science - Honors track Biomedical informatics program", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/maseeh-college-of-engineering-and-computer-science/computer-science/undergraduate-program", "title": "\r\n\tPortland State University\u00a0-\u00a0Undergraduate program\r\n", "language": "en"}, "type": "Document"}, {"page_content": "Undergraduate program The undergraduate computer science program is designed to provide students with the educational background required for a professional career in the computing industry and for further study at the graduate level. The program includes a core of required courses and an elective program of courses over a wide range of topics. Seniors work in teams to carry out community-based projects during the two-term capstone course in software engineering. The undergraduate Computer Science program is accredited by the Computing Accreditation Commission of ABET, https://www.abet.org , under the General Criteria and the Computer Science and Similarly Named Computing Program Criteria. Degree Maps and Learning Outcomes Program Objectives Admission requirements Computer Science B.S. Computer Science Minor Computer Science - Honors track Biomedical informatics program Degree Maps and Learning Outcomes To view degree maps for the undergraduate program, visit www.pdx.edu/academics/programs/undergraduate/computer-science . Expected learning outcomes are listed at www.pdx.edu/computer-science/program-objectives-outcomes .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/maseeh-college-of-engineering-and-computer-science/computer-science/undergraduate-program/degree-maps-and-learning-outcomes", "title": "\r\n\tPortland State University\u00a0-\u00a0Degree Maps and Learning Outcomes\r\n", "language": "en"}, "type": "Document"}, {"page_content": "Undergraduate program The undergraduate computer science program is designed to provide students with the educational background required for a professional career in the computing industry and for further study at the graduate level. The program includes a core of required courses and an elective program of courses over a wide range of topics. Seniors work in teams to carry out community-based projects during the two-term capstone course in software engineering. The undergraduate Computer Science program is accredited by the Computing Accreditation Commission of ABET, https://www.abet.org , under the General Criteria and the Computer Science and Similarly Named Computing Program Criteria. Degree Maps and Learning Outcomes Program Objectives Admission requirements Computer Science B.S. Computer Science Minor Computer Science - Honors track Biomedical informatics program Computer Science B.S. Majors in computer science must complete the following University and departmental degree requirements. All computer science courses used to satisfy the departmental major must be graded C or better. Courses taken outside the department as part of departmental requirements must be graded C- or better. If a course is offered only on a Pass/No Pass (P/NP) grading scale, it must be graded as a Pass. All courses specifically required by the department must be taken for a letter grade unless a required course is only offered with a Pass/No Pass option. After admission to the computer science program, students are required to complete a minimum of 44 upper-division computer science credits in residence at PSU. Freshmen entering with 29 or fewer prior university/college credits must complete all University Studies requirements, including freshman and sophomore inquiry sequences and upper-division cluster courses. Transfer students must have a minimum of 39 credits of University Studies courses and/or arts and letters/social science courses prior to graduation; 12 of these credits are upper-division cluster courses that must be taken at PSU. Transfer students should consult with the CS departmental adviser for more information. The following is a sample curriculum. Students choosing to make modifications to this schedule are urged to consult with an adviser. Requirements Freshman year CS 161 Introduction to Programming and Problem-Solving 4 CS 162 Introduction to Computer Science 4 Mth 251 Calculus I 4 Mth 252 Calculus II 4 Approved Laboratory Science 15 Freshman Inquiry 15 Total Credit Hours: 46 Sophomore year CS 163 Data Structures 4 CS 205 System Programming and Architecture 4 CS 250 Discrete Structures I 4 CS 251 Discrete Structures II 4 Mth 253 Calculus III 4 or Mth 261 Introduction to Linear Algebra 4 Sophomore Inquiry 8 Free electives 16 Total Credit Hours: 44 Junior year CS 302 Programming Methodologies and Software Implementation 4 CS 314 Elements of Software Engineering 4 CS 333 Introduction to Operating Systems 4 CS 350 Algorithms and Complexity 4 CS 486 Introduction to Database Management Systems 4 Approved upper-division programming intensive CS elective 4 Approved Computer Science security elective 4 ECE 341 Introduction to Computer Hardware 4 Wr 227Z Technical Writing 4 Upper-division cluster 12 Total Credit Hours: 48 Senior year CS 305 Social, Ethical, and Legal Implications of Computing 2 CS 358 Principles of Programming Languages 4 CS 469 Software Engineering Capstone I 3 CS 470 Software Engineering Capstone II 3 Approved upper-division computer science electives 16 Approved Math electives 7 Free electives 7 Total Credit Hours: 42 Note: The University requires all students to have a minimum of 62 upper-division credits to graduate. Since fewer than 62 upper-division credits are required in computer science, mathematics, and general education for the computer science major, the extra credits of upper-division work must be taken from either the approved math or the free electives. Upper Division Credits Approved Computer Science security elective Students must complete one course related to the principles and practices for secure computing. The current list of approved courses includes: CS 491 Introduction to Computer Security 4 CS 495 Web and Cloud Security 4 CS 496 Network Security 4 Approved upper-division Computer Science electives The total may include any regular 300- and 400-level computer science course, and any of the courses: ECE 485 Microprocessor System Design 4 ECE 486 Computer Architecture 4 except that no more than a total of 4 credits may be taken from: CS 401 Research 1-6 CS 405 Reading and Conference 1-6 CS 406 Special Projects 1-6 CS 407 Seminar 1-6 CS 409 Practicum 1-9 At least 4 credits of approved \"Programming Intensive\" courses must be taken. These courses can be identified by the \"P\" suffix in the course number (e.g., CS 410P, CS 465P , CS 494P , etc.). Additionally, CS 404 , University Studies courses, and courses specifically described as not being applicable to the CS degree may not be used. Approved Laboratory Science Students must select 3 courses from the following, including their associated laboratories: Biology: Bi 211 Principles of Biology: Biology of Cells 4 Bi 212 Principles of Biology: The biology of organisms 4 Bi 213 Principles of Biology: Evolution and ecology of living organisms 4 With Bi 214 Principles of Biology Lab I 1 Bi 215 Principles of Biology Lab II 1 Bi 216 Principles of Biology Lab III 1 Chemistry: Ch 221 General Chemistry I 4 Ch 222 General Chemistry II 4 Ch 223 General Chemistry III 4 With Ch 227 General Chemistry Laboratory 1 Ch 228 General Chemistry Laboratory 1 Ch 229 General Chemistry Laboratory 1 Geology: G 201 Dynamic Earth: Interior 3 G 202 Dynamic Earth: Surface 3 With G 204 Geology Laboratory 1 G 205 Geology Laboratory 1 Physics: Ph 201 General Physics 4 Ph 202 General Physics 4 Ph 203 General Physics 4 Ph 211 General Physics (with Calculus) I 4 Ph 212 General Physics (with Calculus) II 4 Ph 213 General Physics (with Calculus) III 4 Ph 221 General Physics (with Calculus) I 3 Ph 222 General Physics (with Calculus) II 3 Ph 223 General Physics (with Calculus) III 3 Ph 231 General Physics I with Life Science and Medical Applications 4 Ph 232 General Physics II with Life Science and Medical Applications 4 Ph 233 General Physics III with Life Science and Medical Applications 4 With Ph 214 Lab for Ph 201 or Ph 211 or Ph 221 or Ph 231 1 Ph 215 Lab for Ph 202 or Ph 212 or Ph 222 or Ph 232 1 Ph 216 Lab for Ph 203 or Ph 213 or Ph 223 or Ph 233 1 Credit is only given for General Physics Ph 201 - Ph 203 , Ph 211 - Ph 213 , Ph 221 - Ph 223 , Ph 231 - Ph 233 one time. You may not receive duplicate credit. Approved Mathematics electives Students must complete 7 or more credits of approved mathematics electives. The current list of approved courses includes: Mth 261 Introduction to Linear Algebra 4 Mth 311 Introduction to Mathematical Analysis I 4 Mth 343 Applied Linear Algebra 4 Mth 344 Introduction to Group Theory and Applications 4 Mth 346 Number Theory 4 Mth 356 Discrete Mathematics 4 Mth 457 The Mathematical Theory of Games I 3 Mth 458 The Mathematical Theory of Games II 3 Mth 461 Graph Theory I 3 Mth 462 Graph Theory II 3 Stat 366 Introduction to Experimental Design 4 Stat 451 Applied Statistics for Engineers and Scientists I 4 Stat 452 Applied Statistics for Engineers and Scientists II 3 Stat 464 Applied Regression Analysis 3 Stat 467 Applied Probability I 3 Stat 468 Applied Probability II 3 Other upper-division mathematics or statistics courses may be used to satisfy the requirement with prior written approval from the Computer Science Undergraduate Adviser.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/maseeh-college-of-engineering-and-computer-science/computer-science/undergraduate-program/computer-science-b-s", "title": "\r\n\tPortland State University\u00a0-\u00a0Computer Science B.S.\r\n", "language": "en"}, "type": "Document"}, {"page_content": "Undergraduate program The undergraduate computer science program is designed to provide students with the educational background required for a professional career in the computing industry and for further study at the graduate level. The program includes a core of required courses and an elective program of courses over a wide range of topics. Seniors work in teams to carry out community-based projects during the two-term capstone course in software engineering. The undergraduate Computer Science program is accredited by the Computing Accreditation Commission of ABET, https://www.abet.org , under the General Criteria and the Computer Science and Similarly Named Computing Program Criteria. Degree Maps and Learning Outcomes Program Objectives Admission requirements Computer Science B.S. Computer Science Minor Computer Science - Honors track Biomedical informatics program Biomedical informatics program Portland State University and Oregon Health & Science University offer an accelerated, collaborative degree program in biomedical informatics. Designed for high achieving freshmen, this program combines courses from both schools to award a B.S. in computer science and Master of Biomedical Informatics at the end of five years. Details about the program can be found on the computer science website at www.pdx.edu/computer-science/biomedical-informatics .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/maseeh-college-of-engineering-and-computer-science/computer-science/undergraduate-program/biomedical-informatics-program", "title": "\r\n\tPortland State University\u00a0-\u00a0Biomedical informatics program\r\n", "language": "en"}, "type": "Document"}, {"page_content": "Computer Science Minor A minor in computer science is available within the Maseeh College of Engineering and Computer Science in the area of computer science. Requirements To earn a minor in computer science, a student must complete 24 credits as follows: Courses CS 161 Introduction to Programming and Problem-Solving 4 CS 162 Introduction to Computer Science 4 CS 163 Data Structures 4 CS 205 System Programming and Architecture 4 CS 250 Discrete Structures I 4 Approved CS Minor course 4 Total Credit Hours: 24 Only grades of C or better count toward departmental requirements. At least 12 of the required 24 credits must be taken at Portland State University. Approved CS Minor courses include any lower-division or upper-division Computer Science course. Some upper-division courses are reserved for Computer Science majors and may require permission from the instructor in order to register.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/maseeh-college-of-engineering-and-computer-science/computer-science/undergraduate-program/computer-science-minor", "title": "\r\n\tPortland State University\u00a0-\u00a0Computer Science Minor\r\n", "language": "en"}, "type": "Document"}, {"page_content": "Undergraduate program The undergraduate computer science program is designed to provide students with the educational background required for a professional career in the computing industry and for further study at the graduate level. The program includes a core of required courses and an elective program of courses over a wide range of topics. Seniors work in teams to carry out community-based projects during the two-term capstone course in software engineering. The undergraduate Computer Science program is accredited by the Computing Accreditation Commission of ABET, https://www.abet.org , under the General Criteria and the Computer Science and Similarly Named Computing Program Criteria. Degree Maps and Learning Outcomes Program Objectives Admission requirements Computer Science B.S. Computer Science Minor Computer Science - Honors track Biomedical informatics program Program Objectives The objectives of the undergraduate program in computer science are to produce graduates with: The knowledge and skills necessary for career success. A commitment to uphold the highest standards of professionalism, integrity, and ethical behavior. The motivation and preparation to adapt to rapidly changing technology, and to engage in life-long learning.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/maseeh-college-of-engineering-and-computer-science/computer-science/undergraduate-program/program-objectives", "title": "\r\n\tPortland State University\u00a0-\u00a0Program Objectives\r\n", "language": "en"}, "type": "Document"}, {"page_content": "Undergraduate program The undergraduate computer science program is designed to provide students with the educational background required for a professional career in the computing industry and for further study at the graduate level. The program includes a core of required courses and an elective program of courses over a wide range of topics. Seniors work in teams to carry out community-based projects during the two-term capstone course in software engineering. The undergraduate Computer Science program is accredited by the Computing Accreditation Commission of ABET, https://www.abet.org , under the General Criteria and the Computer Science and Similarly Named Computing Program Criteria. Degree Maps and Learning Outcomes Program Objectives Admission requirements Computer Science B.S. Computer Science Minor Computer Science - Honors track Biomedical informatics program Admission Requirements Students who are intending to graduate with an undergraduate degree in Computer Science must be admitted to Portland State University and complete an opt-in for the Computer Science major after satisfying the lower-division requirements described below. Students with questions should contact the Computer Science Department. No more than 8 upper-division CS course credits (including any approved upper-division transfer credits) taken prior to admission to the program will be counted toward the student's departmental requirement of upper-division CS courses. Students also must be in admitted status during the term they intend to graduate. Computer Science Admission Requirements Applies to students pursuing a B.S. in Computer Science wishing to enroll in upper-division CS courses for the 2023-24 academic year. Computer Science Department website: www.pdx.edu/computer-science Terms of Admission & Deadlines Completing an opt-in for admission to the Computer Science major requires a copy of the student's DARS report, showing that they have passed all of the courses that are required for admission. Although there are no formal deadlines, students are strongly encouraged to complete the opt-in as soon as possible in the term after they have satisfied the admission requirements, so as to avoid delays in being able to register for upper-division CS courses for the following term. The opt-in form is available from the Computer Science Department website at www.pdx.edu/computer-science/undergraduate-admission . A detailed four-year course plan/sample schedule is provided by the \"Computer Science Blue Sheet\", which is available at www.pdx.edu/computer-science/bachelor . Requirements for Admission to the Computer Science Major 1. Completion of each of the following core CS courses with a C or better. CS 161 Introduction to Programming and Problem Solving (4) (This requirement will be waived for students who have completed CS 162 prior to Fall 2022) CS 162 Intro to Computer Science (4) CS 163 Data Structures (4) CS 205 System Programming and Architecture (4) CS 250 Discrete Structures I (4) CS 251 Discrete Structures II (4) 2. Completion of each of the following non-CS courses with a grade of C- or better. MTH 251 Calculus I MTH 252 Calculus II or MTH 261 Linear Algebra Three Approved Laboratory Science courses Prior to admission, PSU students are expected to complete the Freshman and Sophomore Inquiry series. Similarly, transfer students are expected to complete the Maseeh College lower division general education requirements. Completing the general education requirements prior to admission will allow students to focus on CS major courses and likely result in a shorter time to graduation. Appeals Students denied admission to the Computer Science program may submit a written appeal which will then be reviewed by the department's Appeals Committee. All decisions are final. Priority Registration Most applicants will have completed 90 credits by the time they complete the opt-in. This gives them registration priority over students that have completed less than 90 credits. Students who complete the opt-in with less than 90 credits may find classes are full by the time they are able to register. The Computer Science Department is unable to provide overrides to allow earlier registration. Pass/No Pass All required classes must be taken for a grade (not P/NP) unless they are only offered as P/NP. There is no GPA penalty for a Pass or No Pass (but the student may be required to retake the class for a letter grade). Additional Information (exceptions, preferences, etc.) No preference is given to PSU students versus students who completed required courses elsewhere. Continuation Criteria Admitted CS undergraduate students who are not making acceptable progress towards their degree requirements will be dropped from the program and required to reapply for admission. Acceptable progress is defined as completion of at least eight credits of coursework with acceptable grades (C or better for required CS courses, C- or better for required non-CS courses), satisfying departmental requirements, over the preceding academic year. Readmission will be determined by the CS Undergraduate Committee. Prerequisite Policy In order to enroll in most upper-division or graduate CS courses, students must be admitted to the Computer Science program or have the instructor's permission. Before enrolling in any CS course, students should read the course descriptions and ensure that they have completed all prerequisites with a C or better for undergraduate courses, or a B or better for graduate courses. Students who have not met this requirement or who do not meet applicable admission requirements may be administratively dropped from the course. A limited set of upper division CS courses, designated \"dual use courses\", may be taken prior to admission, subject to completion of the associated prerequisites. Students should not take a total of more than 8 credits of upper division CS courses, including any dual use courses, before they have been admitted to the CS major. To avoid a gap in available courses that could delay progress to graduation, students should not generally take dual use courses before they have completed the admission requirements. Students are strongly encouraged to consult the CS Department website, or to meet with an advisor, for further details. Laptop Requirement Students registering for upper-division (300- or above) CS courses, must have access to a laptop with wireless Internet access meeting a set of minimum requirements. These minimum requirements can be found on the computer science website at www.pdx.edu/computer-science/laptop . Chromebooks, iPads, and similar devices do not meet the requirements to run many applications that may be used in various CS courses. Department Communication Academic year 2023-24 admission requirements are available the preceding academic year's spring term (Spring 2023).", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/maseeh-college-of-engineering-and-computer-science/computer-science/undergraduate-program/admission-requirements", "title": "\r\n\tPortland State University\u00a0-\u00a0Admission Requirements\r\n", "language": "en"}, "type": "Document"}, {"page_content": "Undergraduate program The undergraduate computer science program is designed to provide students with the educational background required for a professional career in the computing industry and for further study at the graduate level. The program includes a core of required courses and an elective program of courses over a wide range of topics. Seniors work in teams to carry out community-based projects during the two-term capstone course in software engineering. The undergraduate Computer Science program is accredited by the Computing Accreditation Commission of ABET, https://www.abet.org , under the General Criteria and the Computer Science and Similarly Named Computing Program Criteria. Degree Maps and Learning Outcomes Program Objectives Admission requirements Computer Science B.S. Computer Science Minor Computer Science - Honors track Biomedical informatics program Computer Science - Honors track The honors degree in computer science requires the writing of an honors thesis. Details about the program can be found on the computer science website at www.pdx.edu/computer-science/honors-track .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/maseeh-college-of-engineering-and-computer-science/computer-science/undergraduate-program/computer-science-honors-track", "title": "\r\n\tPortland State University\u00a0-\u00a0Computer Science - Honors track\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS - Computer Science CS 105 Computing Fundamentals I CS 106 Computing Fundamentals II CS 107 Computing Fundamentals III CS 161 Introduction to Programming and Problem-Solving CS 161L Introduction to Programming and Problem-Solving Laboratory CS 162 Introduction to Computer Science CS 162L Lab for CS 162 CS 163 Data Structures CS 163L Lab for CS 163 CS 199 Special Studies CS 205 System Programming and Architecture CS 250 Discrete Structures I CS 251 Discrete Structures II CS 299 Special Studies CS 299L Lab for CS 299 CS 302 Programming Methodologies and Software Implementation CS 302L Lab for CS 302 CS 305 Social, Ethical, and Legal Implications of Computing CS 311 Computational Structures CS 313 Artificial Intelligence and Game Design CS 314 Elements of Software Engineering CS 333 Introduction to Operating Systems CS 333L Introduction to Operating Systems Lab CS 340 Discrete Structures for Engineers CS 345 Cyberculture: The Internet and Popular Culture CS 345 Cyberculture: The Internet and Popular Culture CS 346U Exploring Complexity in Science and Technology CS 347U The Internet Age CS 348U Digital Media, Technology and Society CS 350 Algorithms and Complexity CS 358 Principles of Programming Languages CS 399 Special Studies CS 399L Lab for CS 399 CS 399P Special Studies CS 401 Research CS 402 Independent Study CS 403 Honors Thesis CS 404 Cooperative Education/Internship CS 405 Reading and Conference CS 406 Special Projects CS 407 Seminar CS 409 Practicum CS 410 Selected Topics CS 410L Selected Topics Lab CS 410P Selected Topics CS 415 Parallel Programming CS 415L Lab for CS 415P CS 415P Parallel Programming CS 418 Cultural Competence in Computing CS 420 Object-Oriented Programming and Design CS 420P Object-Oriented Programming CS 421 Programming Language Implementation: Syntax and Static Semantics CS 421L Lab for CS 421 CS 421P Programming Language Implementation: Syntax and Static Semantics CS 422 Programming Language Implementation: Code Generation and Dynamic Semantics CS 422L Lab for CS 422 CS 422P Programming Language Implementation: Code Generation and Dynamic Semantics CS 430P Internet, Web, & Cloud Systems CS 431 Introduction to Performance Measurement, Modeling and Analysis CS 435 Accelerated Computing CS CS 435L Lab for CS 435 CS 438 Computer Architecture CS 440 Deep Learning: Computational Structures and Programming CS 441 Artificial Intelligence CS 442 Advanced Artificial Intelligence: Combinatorial Games CS 442P Advanced Artificial Intelligence: Combinatorial Games CS 443 Advanced Artificial Intelligence: Combinatorial Search CS 445 Machine Learning CS 446 Advanced Topics in Machine Learning CS 447 Computer Graphics CS 447P Computer Graphics CS 451 Numerical Computation CS 452 Building Software Systems with Components CS 454 Software Engineering CS 457 Functional Programming CS 461 Open Source Software Development Laboratory CS 461P Open Source Software Development Laboratory CS 462 Advanced Open Source Software Engineering CS 463 Intro to Web Development CS 464P Front End Web Technologies CS 465P Full Stack Web Development CS 466 Voice Assistants CS 467 The Wireless Web CS 469 Software Engineering Capstone I CS 470 Software Engineering Capstone II CS 480 Randomized Algorithms and Probabilistic Analysis CS 485 Cryptography CS 486 Introduction to Database Management Systems CS 487 Database Management Systems Implementation CS 487P Database Management Systems Implementation CS 488P Cloud and Cluster Data Management CS 489 Blockchain Development & Security CS 490 Introduction to Multimedia Computing and Networking CS 491 Introduction to Computer Security CS 492 Malware Reverse Engineering CS 493 Digital Forensics CS 494 Internetworking Protocols CS 494P Internetworking Protocols CS 495 Web and Cloud Security CS 496 Network Security CS 497 Sensor Networks CS 498 Introduction to Wireless Network Protocols CS 501 Research CS 502 Independent Study CS 503 Thesis CS 504 Cooperative Education/Internship CS 505 Reading and Conference CS 506 Special Projects CS 507 Seminar CS 509 Practicum CS 510 Selected Topics CS 515 Parallel Programming CS 515L Lab for CS 515P CS 518 Cultural Competence in Computing CS 520 Object-Oriented Programming & Design CS 530 Internet, Web, & Cloud Systems CS 531 Introduction to Performance Measurement, Modeling and Analysis CS 532 Operating System Foundations CS 533 Concepts of Operating Systems CS 535 Accelerated Computing CS 538 Computer Architecture CS 540 Deep Learning: Computational Structures and Programming CS 541 Artificial Intelligence CS 542 Advanced Artificial Intelligence: Combinatorial Games CS 543 Advanced Artificial Intelligence: Combinatorial Search CS 545 Machine Learning CS 546 Advanced Topics in Machine Learning CS 547 Computer Graphics CS 549 Computational Geometry CS 550 Parallel Algorithms CS 551 Numerical Computation CS 552 Building Software Systems with Components CS 553 Design Patterns CS 554 Software Engineering CS 555 Software Specification and Verification CS 556 Software Implementation and Testing CS 557 Functional Programming CS 558 Programming Languages CS 559 Software Measurement and Models CS 560 Human-Computer Interaction CS 561 Open Source Software Development Laboratory CS 562 Advanced Open Source Software Engineering CS 563 Intro to Web Development CS 564 Front End Web Technologies CS 565 Full Stack Web Development CS 566 Voice Assistants CS 567 The Wireless Web CS 568 Functional Logic Programming CS 569 Scholarship Skills for Computer Science and Engineering CS 570 Machine Learning Seminar CS 572 Operating System Internals CS 575 Computer Systems Analysis CS 576 Computer Security Research Seminar CS 577 Modern Language Processors CS 578 Programming Language Semantics CS 579 Formal Verification of Hardware/Software Systems CS 580 Randomized Algorithms and Probabilistic Analysis CS 581 Theory of Computation CS 582 Theory of Computation: Advanced Topics CS 583 Automata and Formal Languages CS 584 Algorithm Design and Analysis CS 585 Cryptography CS 586 Introduction to Database Management Systems CS 587 Database Management Systems Implementation CS 588 Cloud and Cluster Data Management CS 589 Blockchain Development & Security CS 590 Introduction to Multimedia Computing and Networking CS 591 Introduction to Computer Security CS 592 Malware Reverse Engineering CS 593 Digital Forensics CS 594 Internetworking Protocols CS 595 Web and Cloud Security CS 596 Network Security CS 597 Sensor Networks CS 598 Introduction to Wireless Network Protocols CS 601 Research CS 602 Independent Study CS 603 Dissertation CS 604 Cooperative Education/Internship CS 605 Reading and Conference CS 606 Special Projects CS 607 Seminar CS 610 Selected Topics CS 653 Design Patterns CS 655 Software Specification and Verification CS 656 Software Implementation and Testing CS 658 Programming Languages CS 659 Software Measurement and Models CS 668 Functional Logic Programming CS 669 Scholarship Skills for Computer Science and Engineering CS 672 Operating System Internals CS 676 Computer Security Research Seminar CS 677 Modern Language Processors CS 678 Programming Language Semantics CS 684 Algorithm Design and Analysis CS 696 Network Management and Security CS 699 Special Studies", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/", "title": "\r\n\tPortland State University\u00a0-\u00a0CS - Computer Science\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 431 Introduction to Performance Measurement, Modeling and Analysis A survey of the fundamentals of computer application and system performance. Hands on programming exercises will allow us to apply the techniques to increasingly complex problems. We will use a variety of state of the art tools for measurement, modeling, simulation, and analysis throughout the course. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 531 and may be taken only once for credit. Prerequisite CS 205 and CS 302 and CS 333 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-431", "title": "\r\n\tPortland State University\u00a0-\u00a0CS431\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 418 Cultural Competence in Computing Students will learn about different identities (e.g., race, ethnicity, gender, class, sexuality, and ability), understand how algorithmic bias in technology affects different identities, and learn how to create accessible and equitable products and more inclusive communities at school, in industry, and beyond. Credits 4 Slash Listed Courses Also offered for graduate level credit as CS 518 and may be taken only once for credit. Prerequisite Admission to the program", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-418", "title": "\r\n\tPortland State University\u00a0-\u00a0CS418\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 502 Independent Study (Credit to be arranged.) Credits 1-9", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-502", "title": "\r\n\tPortland State University\u00a0-\u00a0CS502\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 447P Computer Graphics This course will provide an introduction to graphics systems and applications. Basic structure of interactive graphics systems, characteristics of various hardware devices. Control of display devices, implementation of simple packages, device independence, and standard packages. Distributed architectures for graphics, hidden line and hidden surfaces algorithms, representations of curves and surfaces. Credits 4 Prerequisite CS 302 , Mth 261 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-447p", "title": "\r\n\tPortland State University\u00a0-\u00a0CS447P\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 497 Sensor Networks Foundations of sensor networks, with a focus on activity-based learning through a sequence of hands-on programming exercises with embedded devices with a high-level programming language. Basic building blocks in designing and deploying a sensor network application. Positioning and time synchronization of networked sensor devices, wireless communication characteristics of low-powered radios, energy conservation and harvesting, macro-programming a network of sensor devices and security. Recommended prerequisites: Familiarity with computer systems concepts that could be satisfied by CS 205 . Familiarity with programming in C, C++ or Java. Familiarity with basic concepts in probability and linear algebra that could be satisfied by Mth 301 or equivalent. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 597 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-497", "title": "\r\n\tPortland State University\u00a0-\u00a0CS497\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 489 Blockchain Development & Security Overview of blockchain systems, how they are built, and how they can be exploited. Students will get hands-on experience working with public blockchains as well as build and deploy permissioned blockchains. They will then examine security vulnerabilities in blockchain systems and how they may be automatically exploited. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 589 and may be taken only once for credit. Prerequisite Upper-division standing", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-489", "title": "\r\n\tPortland State University\u00a0-\u00a0CS489\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 422 Programming Language Implementation: Code Generation and Dynamic Semantics Techniques and tools for construction of compiler and interpreter back-ends, including: interpreter design; code generation strategies for standard programming constructs; intermediate representations; optimization techniques; run-time organization, including functions, objects, and closures; run-time systems. Design and implementation of an interpreter and a compiler back-end for a small programming language. Credits 4 Prerequisite CS 205 , CS 302 , CS 311 , CS 314 , and CS 358 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-422", "title": "\r\n\tPortland State University\u00a0-\u00a0CS422\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 532 Operating System Foundations Foundational concepts of operating system design including processes, threads, scheduling, concurrent programming, synchronization mechanisms, memory management, virtual address translation, file systems and security. A primary goal of the course is to help graduate students acquire the foundational knowledge necessary to succeed in CS 533 . Credits 3", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-532", "title": "\r\n\tPortland State University\u00a0-\u00a0CS532\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 487 Database Management Systems Implementation Internal design of a relational database management system. Concurrency control; lock managers; crash recovery; query and operator evaluation; query optimization; storage management; index structures; system catalogs. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 587 and may be taken only once for credit. Prerequisite CS 486 and CS 333 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-487", "title": "\r\n\tPortland State University\u00a0-\u00a0CS487\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 442 Advanced Artificial Intelligence: Combinatorial Games Covers the theory and practice of finding optimal and satisfying solutions to one-player and two-player combinatorial games, including such popular games as Sokoban, Othello, checkers, chess, backgammon, bridge, and CCGs. Simple applications in decision theory and economics may also be discussed. Emphasis on implementation of state-of-the-art solution techniques. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 542 and may be taken only once for credit. Prerequisite CS 302 or experience with algorithms and data structures.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-442", "title": "\r\n\tPortland State University\u00a0-\u00a0CS442\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 162 Introduction to Computer Science The goals of this class are to teach the syntax of C++ to students who already know how to program. Students are expected to be proficient at using conditionals, I/O, loops, and functions with arguments. Topics include: conditionals, I/O, files, functions, classes, pointers, dynamic memory, linear linked lists, and multi-dimensional arrays in C++, as well as program correctness, verification, and testing. Three hours lecture and one 3-hour laboratory. The laboratory emphasizes practical programming skills. Credits 4 Prerequisite CS 161", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/100/cs-162", "title": "\r\n\tPortland State University\u00a0-\u00a0CS162\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 410L Selected Topics Lab Lab for CS 410 . Credits 0", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-410l", "title": "\r\n\tPortland State University\u00a0-\u00a0CS410L\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 410 Selected Topics (Credit to be arranged.) Consent of instructor. Credits 1-6", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-410", "title": "\r\n\tPortland State University\u00a0-\u00a0CS410\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 596 Network Security The class will focus on network security. In order to understand the network security problem, the course will include a review of various forms of network attacks. We will then review basic techniques in applied cryptography, and then secure protocols will be covered including network-layer security and various application-layer secure protocols. We then turn to network-side security management including both passive measures like firewall defense schemes including packet filers and bastion hosts, as well as active intrusion detection and response. Finally, we will cover protocols for protecting privacy and anonymity. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 496 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-596", "title": "\r\n\tPortland State University\u00a0-\u00a0CS596\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 540 Deep Learning: Computational Structures and Programming Deep learning is a powerful tool for machine learning systems. This class provides an introduction to this topic and will focus on classic as well as emerging deep learning techniques. Topics studied include multi-layer perceptrons, convolution neural networks, long-short term memory, attention mechanisms, autoencoders, generative adversarial networks, and natural language models. The class will focus on learning concepts and applying them via several programming assignments. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 440 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-540", "title": "\r\n\tPortland State University\u00a0-\u00a0CS540\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 576 Computer Security Research Seminar Seminar on emerging topics in computer security. Credits 3 Slash Listed Courses Also offered as CS 676 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-576", "title": "\r\n\tPortland State University\u00a0-\u00a0CS576\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 676 Computer Security Research Seminar Seminar on emerging topics in computer security. Credits 3 Slash Listed Courses Also offered as CS 576 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/600/cs-676", "title": "\r\n\tPortland State University\u00a0-\u00a0CS676\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 407 Seminar (Credit to be arranged.) Consent of instructor. Credits 1-6", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-407", "title": "\r\n\tPortland State University\u00a0-\u00a0CS407\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 553 Design Patterns Software design patterns are reusable solutions to recurring software problems. They capture successful experiences and convey expert insight and knowledge to less experienced developers. Course provides an in-depth view of patterns using Java as the presentation language. Course is suitable to software architects and developers who are already well-versed in this language. In addition, it offers continuous opportunities for learning the most advanced features of the Java language and understanding some principles behind the design of its fundamental libraries. Credits 3 Slash Listed Courses Also offered as CS 653 and may be taken only once for credit. Prerequisite programming in Java and CS 520 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-553", "title": "\r\n\tPortland State University\u00a0-\u00a0CS553\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 549 Computational Geometry Perspective and projective geometry. Analytic projective geometry, projective lines and projective planes. Projective transformations of lines and planes. Homogeneous coordinates. Applications to two-dimensional computer graphics. Conic sections in design. Credits 3 Prerequisite CS 163 and 451.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-549", "title": "\r\n\tPortland State University\u00a0-\u00a0CS549\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 305 Social, Ethical, and Legal Implications of Computing History of computing, social context of computing, professional and ethical responsibilities, risks and liabilities of safety-critical systems, intellectual property, privacy and civil liberties, social implications of the Internet, computer crime, economic issues in computing. Credits 2 Prerequisite a course in computer science at the 300 or higher level. Sophomore inquiry or a course in public speaking and a course in writing a research paper.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/300/cs-305", "title": "\r\n\tPortland State University\u00a0-\u00a0CS305\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 656 Software Implementation and Testing Theoretical and practical aspects of the software development process or software lifecycle. Covers the second part of the cycle: detailed design, implementation in a programming language, testing, and maintenance. Emphasis will be on the technical aspects of software testing. Credits 3 Slash Listed Courses Also offered as CS 556 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/600/cs-656", "title": "\r\n\tPortland State University\u00a0-\u00a0CS656\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 420P Object-Oriented Programming The fundamental concepts of object-oriented programming languages, including data abstraction and typing, class inheritance and generic types, prototypes and delegation, concurrency control and distribution, object-oriented databases, and implementation. To illustrate these issues, programming assignments in languages such as Smalltalk, Eiffel and C++ will be given. Credits 4 Prerequisite CS 358", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-420p", "title": "\r\n\tPortland State University\u00a0-\u00a0CS420P\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 678 Programming Language Semantics Introduction to the formal mathematical study of program meaning (semantics), using one or more approaches such as operational semantics, denotational semantics, or programming logics. Emphasis on rigorous mathematical development and formal proof techniques. Language features to be studied may include types and type safety, purity and imperative effects, functional and modular abstraction, polymorphism, higher-order functions, and object-oriented features. Expected preparation: CS 558 and/or CS 557 . Credits 3 Slash Listed Courses Also offered as CS 578 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/600/cs-678", "title": "\r\n\tPortland State University\u00a0-\u00a0CS678\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 531 Introduction to Performance Measurement, Modeling and Analysis A survey of the fundamentals of computer application and system performance. Hands on programming exercises will allow us to apply the techniques to increasingly complex problems. We will use a variety of state of the art tools for measurement, modeling, simulation, and analysis throughout the course. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 431 and may be taken only once for credit. Prerequisite Graduate standing; CS 333 or an equivalent introductory course in Operating Systems.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-531", "title": "\r\n\tPortland State University\u00a0-\u00a0CS531\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 593 Digital Forensics Detailed, hands-on approach to the investigation of criminal incidents in which computers or computer technology play a significant or interesting role. Familiarization with the core computer science theory and practical skills necessary to perform rudimentary computer forensic investigations, understanding the role of technology in investigating computer-based crime, and preparation to deal with investigative bodies. Recommended: CS 333 or CS 533 . No prior background in criminal justice or law is assumed. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 493 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-593", "title": "\r\n\tPortland State University\u00a0-\u00a0CS593\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 464P Front End Web Technologies Students will learn the languages, libraries, and frameworks needed to build user interfaces. This class will start with a review of HTML, CSS, and JavaScript, before focusing on React and the React ecosystem. Students will also work with CSS animations, gain experience with data visualization libraries, and learn about design principles and design systems. The final project is a dashboard application, which will leverage many of the topics covered in class and give students the opportunity to create a data-driven React application. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 564 and may be taken only once for credit. Prerequisite CS 463", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-464p", "title": "\r\n\tPortland State University\u00a0-\u00a0CS464P\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 582 Theory of Computation: Advanced Topics Complexity theory: study of resource bounded computation, the complexity classes (P, NP, PSPACE, and PH), NP-completeness, relativized computation, randomized classes. Credits 3 Prerequisite CS 311 , 350.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-582", "title": "\r\n\tPortland State University\u00a0-\u00a0CS582\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 610 Selected Topics (Credit to be arranged.) Consent of instructor. Credits 1-8", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/600/cs-610", "title": "\r\n\tPortland State University\u00a0-\u00a0CS610\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 569 Scholarship Skills for Computer Science and Engineering The purpose of this course is to make participants better scholars in Computer Science. In particular it attempts to help students become better researchers, better writers, better presenters, and better reviewers. It concentrates on reading, writing and composition skills: on the production and consumption of the \"media\" used by computer scientists to communicate professionally. At the completion of the course, students should be familiar with the tasks and activities of modern scholars in computer science. Credits 3 Slash Listed Courses Also offered as CS 669 and may be taken only once for credit. Prerequisite admission into a Ph.D. program within MCECS.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-569", "title": "\r\n\tPortland State University\u00a0-\u00a0CS569\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 677 Modern Language Processors An advanced course on compiler construction for modern programming languages, such as object-oriented or functional languages. Topics include type-checking, executable intermediate representations, interpretation and virtual machines, code generation for modern architectures, memory management and garbage collection, and optimization. Credits 3 Slash Listed Courses Also offered as CS 577 and may be taken only once for credit. Prerequisite CS 421 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/600/cs-677", "title": "\r\n\tPortland State University\u00a0-\u00a0CS677\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 250 Discrete Structures I Introduces discrete structures and techniques for computing. Sets. Graphs and trees. Functions: properties, recursive definitions. Relations: properties, equivalence, partial order. Proof techniques, inductive proof. Counting techniques and discrete probability. Credits 4 Prerequisite CS 161 and Mth 112Z or passing at the necessary level on the mathematics placement test within the last year", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/200/cs-250", "title": "\r\n\tPortland State University\u00a0-\u00a0CS250\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 601 Research (Credit to be arranged.) Consent of instructor. Credits 1-12", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/600/cs-601", "title": "\r\n\tPortland State University\u00a0-\u00a0CS601\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 470 Software Engineering Capstone II Emphasizes teamwork on a substantial project that will be developed for a real customer. The course integrates the knowledge and skills from the rest of the CS curriculum. This course creates an obligation for participation for two consecutive quarters. This is the second course in a sequence of two CS 469 , CS 470 and must be taken in sequence. Offered as P/NP only. Credits 3 Prerequisite CS 469 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-470", "title": "\r\n\tPortland State University\u00a0-\u00a0CS470\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 515L Lab for CS 515P Lab for CS 515P Parallel Programming. Credits 0 Corequisite CS 515", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-515l", "title": "\r\n\tPortland State University\u00a0-\u00a0CS515L\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 467 The Wireless Web Covers the basics of the Wireless Application Protocol (WAP) as used in modern mobile phones and other handheld devices. Provides an overview of the WAP architecture, as well as an in-depth exploration of the WAP Application Layer (WAE), including WML, WMLScript, and the WAP push framework. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 567 and may be taken only once for credit. Prerequisite CS 465/565.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-467", "title": "\r\n\tPortland State University\u00a0-\u00a0CS467\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 578 Programming Language Semantics Introduction to the formal mathematical study of program meaning (semantics), using one or more approaches such as operational semantics, denotational semantics, or programming logics. Emphasis on rigorous mathematical development and formal proof techniques. Language features to be studied may include types and type safety, purity and imperative effects, functional and modular abstraction, polymorphism, higher-order functions, and object-oriented features. Expected preparation: CS 558 and/or CS 557 . Credits 3 Slash Listed Courses Also offered as CS 678 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-578", "title": "\r\n\tPortland State University\u00a0-\u00a0CS578\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 445 Machine Learning Provides a broad introduction to techniques for building computer systems that learn from experience; conceptual grounding and practical experience with several learning systems; and grounding for advanced study in statistical learning methods, and for work with adaptive technologies used in speech and image processing, robotic planning and control, diagnostic systems, complex system modeling, and iterative optimization. Students gain practical experience implementing and evaluating systems applied to pattern recognition, prediction, and optimization problems. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 545 and may be taken only once for credit. Prerequisite Mth 261 OR Mth 343 ; CS 302 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-445", "title": "\r\n\tPortland State University\u00a0-\u00a0CS445\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 546 Advanced Topics in Machine Learning Covers a number of more advanced topics in machine learning from a more mathematically oriented view. Provides preparation for successfully using machine-learning techniques for various applications. Also provides preparation for graduate-level research in machine learning and adaptive systems. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 446 and may be taken only once for credit. Prerequisite CS 445 /545.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-546", "title": "\r\n\tPortland State University\u00a0-\u00a0CS546\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 606 Special Projects (Credit to be arranged.) Consent of instructor. Credits 1-12", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/600/cs-606", "title": "\r\n\tPortland State University\u00a0-\u00a0CS606\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 589 Blockchain Development & Security Overview of blockchain systems, how they are built, and how they can be exploited. Students will get hands-on experience working with public blockchains as well as build and deploy permissioned blockchains. They will then examine security vulnerabilities in blockchain systems and how they may be automatically exploited. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 489 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-589", "title": "\r\n\tPortland State University\u00a0-\u00a0CS589\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 577 Modern Language Processors An advanced course on compiler construction for modern programming languages, such as object-oriented or functional languages. Topics include type-checking, executable intermediate representations, interpretation and virtual machines, code generation for modern architectures, memory management and garbage collection, and optimization. Credits 3 Slash Listed Courses Also offered as CS 677 and may be taken only once for credit. Prerequisite CS 421 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-577", "title": "\r\n\tPortland State University\u00a0-\u00a0CS577\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 491 Introduction to Computer Security Provides a broad overview of computer security. Introduces foundational principles and shows how they are applied to secure real computing systems. Covers how cryptography, access control, and authentication support confidentiality, integrity, and availability when applied to networks, hosts, information, software, applications, and users. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 591 and may be taken only once for credit. Prerequisite CS 205", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-491", "title": "\r\n\tPortland State University\u00a0-\u00a0CS491\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 495 Web and Cloud Security Covers web and cloud systems and how they can be subverted. The class will focus on the highest risk vulnerabilities, give students practical experience in how they work, and study how they can be prevented. The class will consist mostly of laboratory exercises focused on developing student skills in performing penetration testing. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 595 and may be taken only once for credit. Prerequisite CS 205", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-495", "title": "\r\n\tPortland State University\u00a0-\u00a0CS495\r\n", "language": "en"}, "type": "Document"}, {"page_content": "600 CS 601 Research CS 602 Independent Study CS 603 Dissertation CS 604 Cooperative Education/Internship CS 605 Reading and Conference CS 606 Special Projects CS 607 Seminar CS 610 Selected Topics CS 653 Design Patterns CS 655 Software Specification and Verification CS 656 Software Implementation and Testing CS 658 Programming Languages CS 659 Software Measurement and Models CS 668 Functional Logic Programming CS 669 Scholarship Skills for Computer Science and Engineering CS 672 Operating System Internals CS 676 Computer Security Research Seminar CS 677 Modern Language Processors CS 678 Programming Language Semantics CS 684 Algorithm Design and Analysis CS 696 Network Management and Security CS 699 Special Studies", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/600", "title": "\r\n\tPortland State University\u00a0-\u00a0600\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 559 Software Measurement and Models Survey, evaluation, and application of software measurement techniques and models. Particular emphasis on product metrics such as Software Science, Cyclomatic Complexity, and Function Points. Credits 3", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-559", "title": "\r\n\tPortland State University\u00a0-\u00a0CS559\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 345 Cyberculture: The Internet and Popular Culture Study of the effect of computers and the internet on popular culture. Graduates of the course will become more intelligent and successful users of the Internet, understand how the internet works, be aware of the wide variety of applications that exist on the internet, and will understand the primary principles that underlie the success the Internet has had in changing popular culture. Typical topics will include history and technologies of the web, social networks, the long tail in business and culture, the power of groups, user generated content, complex systems, virtual worlds and the power of search. Credits 4 Prerequisite Sophomore Inquiry: Popular Culture (UNST 254).", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/300/cs-345", "title": "\r\n\tPortland State University\u00a0-\u00a0CS345\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 299L Lab for CS 299 Lab for CS 299 . Credits 0", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/200/cs-299l", "title": "\r\n\tPortland State University\u00a0-\u00a0CS299L\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 592 Malware Reverse Engineering Studies the techniques malicious code developers employ to exploit vulnerable computer systems. The course explores the form and function of a range of malware while exploring how the increased mixing of code and data is now exposing us to an array of security vulnerabilities and exploits. Given these threats, the course will then examine modern defenses against malware and how they can be used to protect users. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 492 and may be taken only once for credit. Prerequisite Admission into the CS program.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-592", "title": "\r\n\tPortland State University\u00a0-\u00a0CS592\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 669 Scholarship Skills for Computer Science and Engineering The purpose of this course is to make participants better scholars in Computer Science. In particular it attempts to help students become better researchers, better writers, better presenters, and better reviewers. It concentrates on reading, writing and composition skills: on the production and consumption of the \"media\" used by computer scientists to communicate professionally. At the completion of the course, students should be familiar with the tasks and activities of modern scholars in computer science. Credits 3 Slash Listed Courses Also offered as CS 569 and may be taken only once for credit. Prerequisite admission into a Ph.D. program within MCECS.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/600/cs-669", "title": "\r\n\tPortland State University\u00a0-\u00a0CS669\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 602 Independent Study (Credit to be arranged.) Credits 1-12", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/600/cs-602", "title": "\r\n\tPortland State University\u00a0-\u00a0CS602\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 594 Internetworking Protocols Advanced study of the protocols and algorithms used in the Internet (IETF) family of networking protocols. For example, ARP, IP, UDP, TCP, multicasting, routing protocols like RIP and OSPF, and application protocols like DNS, NFS, SNMP, FTP and HTTP. Issues such as addressing, name service, protocol design, and scalability will be explored. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 494 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-594", "title": "\r\n\tPortland State University\u00a0-\u00a0CS594\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 488P Cloud and Cluster Data Management Covers advanced data management solutions emerging for cloud and cluster computing environments, focusing on horizontal and vertical scalable approaches. Also covers principles behind data management in these environments, plus specific data management systems that are currently in use or being developed. Topics range from novel data processing paradigms to commercial data management platforms and open-source NoSQL databases. Students will gain broad knowledge about these systems and practical experience with them. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 588 and may be taken only once for credit. Prerequisite CS 486 or consent of the instructor.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-488p", "title": "\r\n\tPortland State University\u00a0-\u00a0CS488P\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 348U Digital Media, Technology and Society Covers, from a computing perspective, the transition of society to one that is primarily digital. Provides an understanding of digital media, its technical limitations, copyright and digital rights management, and digital media communications. The course may not be used as an upper-division CS Elective for the BS degree in Computer Science. Credits 4", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/300/cs-348u", "title": "\r\n\tPortland State University\u00a0-\u00a0CS348U\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 406 Special Projects (Credit to be arranged.) Consent of instructor. Credits 1-6", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-406", "title": "\r\n\tPortland State University\u00a0-\u00a0CS406\r\n", "language": "en"}, "type": "Document"}, {"page_content": "400 CS 401 Research CS 402 Independent Study CS 403 Honors Thesis CS 404 Cooperative Education/Internship CS 405 Reading and Conference CS 406 Special Projects CS 407 Seminar CS 409 Practicum CS 410 Selected Topics CS 410L Selected Topics Lab CS 410P Selected Topics CS 415 Parallel Programming CS 415L Lab for CS 415P CS 415P Parallel Programming CS 418 Cultural Competence in Computing CS 420 Object-Oriented Programming and Design CS 420P Object-Oriented Programming CS 421 Programming Language Implementation: Syntax and Static Semantics CS 421L Lab for CS 421 CS 421P Programming Language Implementation: Syntax and Static Semantics CS 422 Programming Language Implementation: Code Generation and Dynamic Semantics CS 422L Lab for CS 422 CS 422P Programming Language Implementation: Code Generation and Dynamic Semantics CS 430P Internet, Web, & Cloud Systems CS 431 Introduction to Performance Measurement, Modeling and Analysis CS 435 Accelerated Computing CS CS 435L Lab for CS 435 CS 438 Computer Architecture CS 440 Deep Learning: Computational Structures and Programming CS 441 Artificial Intelligence CS 442 Advanced Artificial Intelligence: Combinatorial Games CS 442P Advanced Artificial Intelligence: Combinatorial Games CS 443 Advanced Artificial Intelligence: Combinatorial Search CS 445 Machine Learning CS 446 Advanced Topics in Machine Learning CS 447 Computer Graphics CS 447P Computer Graphics CS 451 Numerical Computation CS 452 Building Software Systems with Components CS 454 Software Engineering CS 457 Functional Programming CS 461 Open Source Software Development Laboratory CS 461P Open Source Software Development Laboratory CS 462 Advanced Open Source Software Engineering CS 463 Intro to Web Development CS 464P Front End Web Technologies CS 465P Full Stack Web Development CS 466 Voice Assistants CS 467 The Wireless Web CS 469 Software Engineering Capstone I CS 470 Software Engineering Capstone II CS 480 Randomized Algorithms and Probabilistic Analysis CS 485 Cryptography CS 486 Introduction to Database Management Systems CS 487 Database Management Systems Implementation CS 487P Database Management Systems Implementation CS 488P Cloud and Cluster Data Management CS 489 Blockchain Development & Security CS 490 Introduction to Multimedia Computing and Networking CS 491 Introduction to Computer Security CS 492 Malware Reverse Engineering CS 493 Digital Forensics CS 494 Internetworking Protocols CS 494P Internetworking Protocols CS 495 Web and Cloud Security CS 496 Network Security CS 497 Sensor Networks CS 498 Introduction to Wireless Network Protocols", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400", "title": "\r\n\tPortland State University\u00a0-\u00a0400\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 603 Dissertation (Credit to be arranged.) Consent of instructor. Credits 1-12", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/600/cs-603", "title": "\r\n\tPortland State University\u00a0-\u00a0CS603\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 462 Advanced Open Source Software Engineering Surveys the growing academic literature describing tools, techniques, community management, project management and collaboration strategies used in open source software development. Emphasis is placed upon tool-driven development, upon open development processes and tools, and upon comparison with processes and practices in proprietary software. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 562 and may be taken only once for credit. Prerequisite CS 314 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-462", "title": "\r\n\tPortland State University\u00a0-\u00a0CS462\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 563 Intro to Web Development Students will learn the fundamentals of web development, the structure and functionality of the web, and how to create responsive and accessible web applications using HTML, CSS, and JavaScript. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 463 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-563", "title": "\r\n\tPortland State University\u00a0-\u00a0CS563\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 575 Computer Systems Analysis An advanced course on computer systems. Topics include operating systems, performance evaluation, device analysis, construction and proof of monitors, file systems, objects and processes, reliability, and protection. Credits 3 Prerequisite CS 333 , Stat 460.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-575", "title": "\r\n\tPortland State University\u00a0-\u00a0CS575\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 591 Introduction to Computer Security Provides a broad overview of computer security. Introduces foundational principles and shows how they are applied to secure real computing systems. Covers how cryptography, access control, and authentication support confidentiality, integrity, and availability when applied to networks, hosts, information, software, applications, and users. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 491 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-591", "title": "\r\n\tPortland State University\u00a0-\u00a0CS591\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 560 Human-Computer Interaction Introduction to the basic theory of human-computer interaction. Principles of human cognition and interface design, interface evaluation techniques. Several prototyping tools will be presented. A project is required. Credits 3", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-560", "title": "\r\n\tPortland State University\u00a0-\u00a0CS560\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 541 Artificial Intelligence Introduction to the basic concepts and techniques of artificial intelligence. Knowledge representation, problem solving, machine learning, natural language understanding, and AI search techniques. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 441 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-541", "title": "\r\n\tPortland State University\u00a0-\u00a0CS541\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 345 Cyberculture: The Internet and Popular Culture Study of the effect of computers and the internet on popular culture. Graduates of the course will become more intelligent and successful users of the Internet, understand how the internet works, be aware of the wide variety of applications that exist on the internet, and will understand the primary principles that underlie the success the Internet has had in changing popular culture. Typical topics will include history and technologies of the web, social networks, the long tail in business and culture, the power of groups, user generated content, complex systems, virtual worlds and the power of search. Credits 4", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/300/cs-345u", "title": "\r\n\tPortland State University\u00a0-\u00a0CS345\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 454 Software Engineering Current methodologies for the development of large, industrial strength software systems. Topics include requirements, specification, design, implementation, testing, project management and cost estimation, formal methods, and software process improvement. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 554 and may be taken only once for credit. Prerequisite CS 302 , CS 314 , and CS 358", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-454", "title": "\r\n\tPortland State University\u00a0-\u00a0CS454\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 496 Network Security Focus on network security including a review of various forms of network attacks; a review of basic techniques in applied cryptography, and secure protocols will be covered including network-layer security and various application-layer secure protocols. Also covers network-side security management including both passive measures, as well as active intrusion detection and response. Covers protocols for protection of privacy and anonymity. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 596 and may be taken only once for credit. Prerequisite CS 205", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-496", "title": "\r\n\tPortland State University\u00a0-\u00a0CS496\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 107 Computing Fundamentals III Introduction to Web programming and associated web tool usage for non-CS majors. Centering around the more sophisticated aspects of browsers. Web pages that represent the input to browsers are defined. In-depth study of HTML, VBScript and JavaScript. Brief exploration into CGI Scripts and other server-side tools. Course differentiates between Web page design (a graphics designer's role) and Web page programming, taking the results of their work and committing it to workable code. Recommended prerequisites: high school algebra and CS106 or some programming experience. Credits 4", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/100/cs-107", "title": "\r\n\tPortland State University\u00a0-\u00a0CS107\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 552 Building Software Systems with Components Designed to familiarize students with the concepts behind and opportunities afforded by modern component architectures, such as Microsoft COM, Java Beans, and CORBA. Students are exposed to component development techniques and methods for developing complex software architectures using components. Students become familiar with component development, scripting and composing components, and the strengths and weaknesses of using components in designing large complex software systems. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 452 and may be taken only once for credit. Prerequisite CS 300, CS 333 , CS 350 ; knowledge of C++ or Java programming.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-552", "title": "\r\n\tPortland State University\u00a0-\u00a0CS552\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 567 The Wireless Web Covers the basics of the Wireless Application Protocol (WAP) as used in modern mobile phones and other handheld devices. Provides an overview of the WAP architecture, as well as an in-depth exploration of the WAP Application Layer (WAE), including WML, WMLScript, and the WAP push framework. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 467 and may be taken only once for credit. Prerequisite CS 465/565.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-567", "title": "\r\n\tPortland State University\u00a0-\u00a0CS567\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 557 Functional Programming Introduction to functional notation, recursion, higher-order functions, reasoning about functions, and models for the evaluation of applicative expressions. Use of functional languages. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 457 and may be taken only once for credit. Prerequisite Graduate-standing and admission into the CS program.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-557", "title": "\r\n\tPortland State University\u00a0-\u00a0CS557\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 422P Programming Language Implementation: Code Generation and Dynamic Semantics Techniques and tools for construction of compiler and interpreter back-ends, including: interpreter design; code generation strategies for standard programming constructs; intermediate representations; optimization techniques; run-time organization, including functions, objects, and closures; run-time systems. Design and implementation of an interpreter and a compiler back-end for a small programming language. Credits 4 Prerequisite CS 205 , CS 302 , CS 314 , and CS 358 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-422p", "title": "\r\n\tPortland State University\u00a0-\u00a0CS422P\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 550 Parallel Algorithms Definition and nature of parallel computation. Parallel computation from the point of view of hardware/architecture, program/scheduling, and algorithms. Why and how parallel computation is different from serial computation. Examples to highlight the differences. Parallel algorithms in general: illustration of the most important features and techniques. Illustration of the limitations. A survey of major results, general form of results, limitations on speed-up. Credits 3 Prerequisite CS 350 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-550", "title": "\r\n\tPortland State University\u00a0-\u00a0CS550\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 446 Advanced Topics in Machine Learning Covers a number of more advanced topics in machine learning from a more mathematically oriented view. Provides preparation for successfully using machine-learning techniques for various applications. Also provides preparation for graduate-level research in machine learning and adaptive systems. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 546 and may be taken only once for credit. Prerequisite CS 445 /545.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-446", "title": "\r\n\tPortland State University\u00a0-\u00a0CS446\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 313 Artificial Intelligence and Game Design Study of the basic principles of computer game design, the most popular techniques and technologies for game implementation, focusing on the many ways in which advances in artificial intelligence influences game design. Credits 4 Prerequisite Prior computer programming experience equivalent to CS 163 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/300/cs-313", "title": "\r\n\tPortland State University\u00a0-\u00a0CS313\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 490 Introduction to Multimedia Computing and Networking Introductory course in multimedia computing and networking intended for senior undergraduate or graduate level students. The objective of this course is to introduce many of the fundamental concepts involved with handling multimedia data and applications. The course will cover (i) basic representation and compression of multimedia data types including H.261, JPEG, and MPEG, (ii) techniques to support multimedia quality-of-service in computing and networked systems, and (iii) networked streaming media techniques such as buffering and adaptation. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 590 and may be taken only once for credit. Prerequisite CS 333 or instructor's permission.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-490", "title": "\r\n\tPortland State University\u00a0-\u00a0CS490\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 607 Seminar (Credit to be arranged.) Credits 1-4", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/600/cs-607", "title": "\r\n\tPortland State University\u00a0-\u00a0CS607\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 447 Computer Graphics This course will provide an introduction to graphics systems and applications. Basic structure of interactive graphics systems, characteristics of various hardware devices. Control of display devices, implementation of simple packages, device independence, and standard packages. Distributed architectures for graphics, hidden line and hidden surfaces algorithms, representations of curves and surfaces. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 547 and may be taken only once for credit. Prerequisite CS 302 , Mth 261 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-447", "title": "\r\n\tPortland State University\u00a0-\u00a0CS447\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 451 Numerical Computation Introduction to numerical methods. Includes topics from elementary discussion of errors, polynomials, interpolation, quadrature, linear systems of equations, and solution of nonlinear equations. Credits 4 Slash Listed Courses Also offered for graduate-credit as CS 551 and may be taken only once for credit. Prerequisite Mth 261 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-451", "title": "\r\n\tPortland State University\u00a0-\u00a0CS451\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 542 Advanced Artificial Intelligence: Combinatorial Games Covers the theory and practice of finding optimal and satisfying solutions to one-player and two-player combinatorial games, including such popular games as Sokoban, Othello, checkers, chess, backgammon, bridge, and CCGs. Simple applications in decision theory and economics may also be discussed. Emphasis on implementation of state-of-the-art solution techniques. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 442 and may be taken only once for credit. Prerequisite Experience with algorithms and data structures.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-542", "title": "\r\n\tPortland State University\u00a0-\u00a0CS542\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 568 Functional Logic Programming Introduction to functional logic programming. Foundations and basic principles of this paradigm will be explained in some depth and complemented by encoding practical problems in a functional logic language using a leading compiler/interpreter. Focus on non-determinism and computations with incomplete information. Implementation techniques will be briefly discussed. Credits 3 Slash Listed Courses Also offered as CS 668 and may be taken only once for credit. Prerequisite CS 558 Programming Languages.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-568", "title": "\r\n\tPortland State University\u00a0-\u00a0CS568\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 415L Lab for CS 415P Lab for CS 415P Parallel Programming. Credits 0 Corequisite CS 415P", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-415l", "title": "\r\n\tPortland State University\u00a0-\u00a0CS415L\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 586 Introduction to Database Management Systems Introduction to fundamental concepts of database management systems using primarily the relational model. Schema design and refinement. Query languages. Database application development environments. Overview of physical data organization, query optimization and processing, physical design, security, and transactions used in recovery and concurrency control. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 486 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-586", "title": "\r\n\tPortland State University\u00a0-\u00a0CS586\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 595 Web and Cloud Security Covers web and cloud systems and how they can be subverted. The class will focus on the highest risk vulnerabilities, give students practical experience in how they work, and study how they can be prevented. The class will consist mostly of laboratory exercises focused on developing student skills in performing penetration testing. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 495 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-595", "title": "\r\n\tPortland State University\u00a0-\u00a0CS595\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 493 Digital Forensics Detailed, hands-on approach to the investigation of criminal incidents in which computers or computer technology play a significant or interesting role. Familiarization with the core computer science theory and practical skills necessary to perform rudimentary computer forensic investigations, understanding the role of technology in investigating computer-based crime, and preparation to deal with investigative bodies. Recommended: CS 333 or CS 533 . No prior background in criminal justice or law is assumed. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 593 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-493", "title": "\r\n\tPortland State University\u00a0-\u00a0CS493\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 461 Open Source Software Development Laboratory Explores Open Source software engineering and its methodologies in a laboratory classroom setting. Focuses on the development and delivery of Open Source software projects by teams of 1-3 students. Students prepare and present material, working using email and the web. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 561 and may be taken only once for credit. Prerequisite CS 314 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-461", "title": "\r\n\tPortland State University\u00a0-\u00a0CS461\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 452 Building Software Systems with Components Designed to familiarize students with the concepts behind and opportunities afforded by modern component architectures, such as Microsoft COM, Java Beans, and CORBA. Students are exposed to component development techniques and methods for developing complex software architectures using components. Students become familiar with component development, scripting and composing components, and the strengths and weaknesses of using components in designing large complex software systems. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 552 and may be taken only once for credit. Prerequisite CS 314 , CS 333 , CS 350 ; knowledge of C++ or Java programming.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-452", "title": "\r\n\tPortland State University\u00a0-\u00a0CS452\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 518 Cultural Competence in Computing Students will learn about different identities (e.g., race, ethnicity, gender, class, sexuality, and ability), understand how algorithmic bias in technology affects different identities, and learn how to create accessible and equitable products and more inclusive communities at school, in industry, and beyond. Credits 3 Slash Listed Courses Also offered for undergraduate level credit as CS 418 and may be taken only once for credit. Prerequisite Admission to the program", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-518", "title": "\r\n\tPortland State University\u00a0-\u00a0CS518\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 580 Randomized Algorithms and Probabilistic Analysis Probabilistic tools used in the design and analysis of modern algorithms and data structures. Topics include: review discrete random, occupancy problems, tail bounds, Markov chains, the probabilistic method, martingales, Monte Carlo methods. The course explores a variety of CS applications. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 480 and may be taken only once for credit. Prerequisite CS 350 , Stats 451.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-580", "title": "\r\n\tPortland State University\u00a0-\u00a0CS580\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 672 Operating System Internals Internals of a specific operating system including structure of the kernel, block buffering cache, file system structure and system calls, process structure and scheduling, memory management, device driver interface, and inter process communication. Credits 3 Slash Listed Courses Also offered as CS 572 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/600/cs-672", "title": "\r\n\tPortland State University\u00a0-\u00a0CS672\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 556 Software Implementation and Testing Theoretical and practical aspects of the software development process or software lifecycle. Covers the second part of the cycle: detailed design, implementation in a programming language, testing, and maintenance. Emphasis will be on the technical aspects of software testing. Credits 3 Slash Listed Courses Also offered as CS 656 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-556", "title": "\r\n\tPortland State University\u00a0-\u00a0CS556\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 562 Advanced Open Source Software Engineering Surveys the growing academic literature describing tools, techniques, community management, project management and collaboration strategies used in open source software development. Emphasis is placed upon tool-driven development, upon open development processes and tools, and upon comparison with processes and practices in proprietary software. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 462 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-562", "title": "\r\n\tPortland State University\u00a0-\u00a0CS562\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 399L Lab for CS 399 Lab for CS 399 special studies. Credits 0", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/300/cs-399l", "title": "\r\n\tPortland State University\u00a0-\u00a0CS399L\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 440 Deep Learning: Computational Structures and Programming Deep learning is a powerful tool for machine learning systems. This class provides an introduction to this topic and will focus on classic as well as emerging deep learning techniques. Topics studied include multi-layer perceptrons, convolution neural networks, long-short term memory, attention mechanisms, autoencoders, generative adversarial networks, and natural language models. The class will focus on learning concepts and applying them via several programming assignments. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 540 and may be taken only once for credit. Prerequisite CS 350", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-440", "title": "\r\n\tPortland State University\u00a0-\u00a0CS440\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 501 Research (Credit to be arranged.) Consent of instructor. Credits 1-9", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-501", "title": "\r\n\tPortland State University\u00a0-\u00a0CS501\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 421L Lab for CS 421 Lab for CS 421 . Credits 0", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-421l", "title": "\r\n\tPortland State University\u00a0-\u00a0CS421L\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 494 Internetworking Protocols Advanced study of the protocols and algorithms used in the Internet (IETF) family of networking protocols. For example, ARP, IP, UDP, TCP, multicasting, routing protocols like RIP and OSPF, and application protocols like DNS, NFS, SNMP, FTP and HTTP. Issues such as addressing, name service, protocol design, and scalability will be explored. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 594 and may be taken only once for credit. Prerequisite CS 333 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-494", "title": "\r\n\tPortland State University\u00a0-\u00a0CS494\r\n", "language": "en"}, "type": "Document"}, {"page_content": "500 CS 501 Research CS 502 Independent Study CS 503 Thesis CS 504 Cooperative Education/Internship CS 505 Reading and Conference CS 506 Special Projects CS 507 Seminar CS 509 Practicum CS 510 Selected Topics CS 515 Parallel Programming CS 515L Lab for CS 515P CS 518 Cultural Competence in Computing CS 520 Object-Oriented Programming & Design CS 530 Internet, Web, & Cloud Systems CS 531 Introduction to Performance Measurement, Modeling and Analysis CS 532 Operating System Foundations CS 533 Concepts of Operating Systems CS 535 Accelerated Computing CS 538 Computer Architecture CS 540 Deep Learning: Computational Structures and Programming CS 541 Artificial Intelligence CS 542 Advanced Artificial Intelligence: Combinatorial Games CS 543 Advanced Artificial Intelligence: Combinatorial Search CS 545 Machine Learning CS 546 Advanced Topics in Machine Learning CS 547 Computer Graphics CS 549 Computational Geometry CS 550 Parallel Algorithms CS 551 Numerical Computation CS 552 Building Software Systems with Components CS 553 Design Patterns CS 554 Software Engineering CS 555 Software Specification and Verification CS 556 Software Implementation and Testing CS 557 Functional Programming CS 558 Programming Languages CS 559 Software Measurement and Models CS 560 Human-Computer Interaction CS 561 Open Source Software Development Laboratory CS 562 Advanced Open Source Software Engineering CS 563 Intro to Web Development CS 564 Front End Web Technologies CS 565 Full Stack Web Development CS 566 Voice Assistants CS 567 The Wireless Web CS 568 Functional Logic Programming CS 569 Scholarship Skills for Computer Science and Engineering CS 570 Machine Learning Seminar CS 572 Operating System Internals CS 575 Computer Systems Analysis CS 576 Computer Security Research Seminar CS 577 Modern Language Processors CS 578 Programming Language Semantics CS 579 Formal Verification of Hardware/Software Systems CS 580 Randomized Algorithms and Probabilistic Analysis CS 581 Theory of Computation CS 582 Theory of Computation: Advanced Topics CS 583 Automata and Formal Languages CS 584 Algorithm Design and Analysis CS 585 Cryptography CS 586 Introduction to Database Management Systems CS 587 Database Management Systems Implementation CS 588 Cloud and Cluster Data Management CS 589 Blockchain Development & Security CS 590 Introduction to Multimedia Computing and Networking CS 591 Introduction to Computer Security CS 592 Malware Reverse Engineering CS 593 Digital Forensics CS 594 Internetworking Protocols CS 595 Web and Cloud Security CS 596 Network Security CS 597 Sensor Networks CS 598 Introduction to Wireless Network Protocols", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500", "title": "\r\n\tPortland State University\u00a0-\u00a0500\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 443 Advanced Artificial Intelligence: Combinatorial Search Explores methods for the solution of constraint satisfaction and related problems using search techniques, in the context of real-world problems such as resource-bounded scheduling, enterprise planning, classical planning, and one- and two-player games. Emphasis on coding projects, and on reading and reporting on selected literature. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 543 and may be taken only once for credit. Prerequisite CS 302 or experience with algorithms and data structures.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-443", "title": "\r\n\tPortland State University\u00a0-\u00a0CS443\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 251 Discrete Structures II Continuation of CS 250 . Logic: propositional calculus, first-order predicate calculus. Formal reasoning: natural deduction, resolution. Applications to program correctness and automatic reasoning. Introduction to algebraic structures in computing. Credits 4 Prerequisite CS 250 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/200/cs-251", "title": "\r\n\tPortland State University\u00a0-\u00a0CS251\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 430P Internet, Web, & Cloud Systems Covers modern networked computing systems and the abstractions they provide. Specifically, students will learn about and apply their knowledge of topics such as Internet protocols, virtual machines and containers, web servers and frameworks, and databases as well as their deployment in modern cloud environments. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 530 and may be taken only once for credit. Prerequisite Upper-division standing and admission into the CS program.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-430p", "title": "\r\n\tPortland State University\u00a0-\u00a0CS430P\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 515 Parallel Programming An introduction to parallel programming concepts and techniques. Topics include: parallel programming models and languages, share-memory programming, message-passing programming, performance models and analysis techniques, domain-specific parallel algorithms. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 415 and may be taken only once for credit. Corequisite CS 515L", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-515", "title": "\r\n\tPortland State University\u00a0-\u00a0CS515\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 333L Introduction to Operating Systems Lab Lab for Introduction to Operating Systems. Credits 0 Corequisite CS 333", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/300/cs-333l", "title": "\r\n\tPortland State University\u00a0-\u00a0CS333L\r\n", "language": "en"}, "type": "Document"}, {"page_content": "100 CS 105 Computing Fundamentals I CS 106 Computing Fundamentals II CS 107 Computing Fundamentals III CS 161 Introduction to Programming and Problem-Solving CS 161L Introduction to Programming and Problem-Solving Laboratory CS 162 Introduction to Computer Science CS 162L Lab for CS 162 CS 163 Data Structures CS 163L Lab for CS 163 CS 199 Special Studies", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/100", "title": "\r\n\tPortland State University\u00a0-\u00a0100\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 161L Introduction to Programming and Problem-Solving Laboratory Lab for CS 161 Introduction to Programming and Problem-Solving. Credits 0", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/100/cs-161l", "title": "\r\n\tPortland State University\u00a0-\u00a0CS161L\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 421P Programming Language Implementation: Syntax and Static Semantics Techniques and tools for construction of compiler and interpreter front-ends, including: representation of programs using abstract syntax trees; lexical analysis, and lexer generators; parsing (recursive descent, top-down, and bottom-up), and parser generators; type checking and static analysis. Design and implementation of a front-end for a small programming language. Credits 4 Prerequisite CS 205 , CS 302 , CS 311 , CS 314 , and CS 358 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-421p", "title": "\r\n\tPortland State University\u00a0-\u00a0CS421P\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 587 Database Management Systems Implementation Internal design of a relational database management system. Concurrency control; lock managers; crash recovery; query and operator evaluation; query optimization; storage management; index structures; system catalogs. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 487 and may be taken only once for credit. Prerequisite CS 486 /586 and CS 333 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-587", "title": "\r\n\tPortland State University\u00a0-\u00a0CS587\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 435 Accelerated Computing Heterogeneous approaches that use special-purpose processors to accelerate the execution of a variety of applications. GPUs, Intel Xeon Phi, APUs, FPGUs. The sustainability implications of these platforms. Lectures, homeworks, labs, and group programming projects using NVIDIA GPUs and Intel Xeon Phi. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 535 and may be taken only once for credit. Prerequisite CS 333 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-435", "title": "\r\n\tPortland State University\u00a0-\u00a0CS435\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 415P Parallel Programming An introduction to parallel programming concepts and techniques. Topics include: parallel programming models and languages, share-memory programming, message-passing programming, performance models and analysis techniques, domain-specific parallel algorithms. Credits 4 Prerequisite CS 302 and CS 333 . Corequisite CS 415L", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-415p", "title": "\r\n\tPortland State University\u00a0-\u00a0CS415P\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 530 Internet, Web, & Cloud Systems Covers modern networked computing systems and the abstractions they provide. Specifically, students will learn about and apply their knowledge of topics such as Internet protocols, virtual machines and containers, web servers and frameworks, and databases as well as their deployment in modern cloud environments. Credits 3 Slash Listed Courses Also offered for graduate-level credit as CS 430P and may be taken only once for credit. Prerequisite Graduate-standing and admission into CS program.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-530", "title": "\r\n\tPortland State University\u00a0-\u00a0CS530\r\n", "language": "en"}, "type": "Document"}, {"page_content": "200 CS 205 System Programming and Architecture CS 250 Discrete Structures I CS 251 Discrete Structures II CS 299 Special Studies CS 299L Lab for CS 299", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/200", "title": "\r\n\tPortland State University\u00a0-\u00a0200\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 579 Formal Verification of Hardware/Software Systems Introduction to the formal verification of functional correctness of hardware and software systems. Topics to be covered include: formal logics for system verification (first-order logic, higher order logic, temporal logic), formal specifications, theorem proving systems, circuit verification, microprocessor verification, and system software verification. Credits 3 Prerequisite CS 333 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-579", "title": "\r\n\tPortland State University\u00a0-\u00a0CS579\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 597 Sensor Networks Foundations of sensor networks, with a focus on activity-based learning through a sequence of hands-on programming exercises with embedded devices with a high-level programming language. Basic building blocks in designing and deploying a sensor network application. Positioning and time synchronization of networked sensor devices, wireless communication characteristics of low-powered radios, energy conservation and harvesting, macro-programming a network of sensor devices and security. Recommended prerequisites: Familiarity with computer systems concepts that could be satisfied by CS 205 . Familiarity with programming in C, C++ or Java. Familiarity with basic concepts in probability and linear algebra that could be satisfied by Mth 301 or equivalent. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 497 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-597", "title": "\r\n\tPortland State University\u00a0-\u00a0CS597\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 507 Seminar (Credit to be arranged.) Consent of instructor. Credits 1-6", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-507", "title": "\r\n\tPortland State University\u00a0-\u00a0CS507\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 543 Advanced Artificial Intelligence: Combinatorial Search Explores methods for the solution of constraint satisfaction and related problems using search techniques, in the context of real-world problems such as resource-bounded scheduling, enterprise planning, classical planning, and one- and two-player games. Emphasis on coding projects, and on reading and reporting on selected literature. Credits 3 Slash Listed Courses Also offered for undergraduate-level as CS 443 and may be taken only once for credit. Prerequisite Experience with algorithms and data structures.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-543", "title": "\r\n\tPortland State University\u00a0-\u00a0CS543\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 346U Exploring Complexity in Science and Technology Introduction to Complex Systems, an interdisciplinary field that studies how collections of simple entities organize themselves to produce complex behavior, use information, and adapt and learn. Focuses on common principles underlying complexity in science and technology, and includes ideas from physics, biology, the social sciences, and computer science. The course may not be used as one of the upper-division CS Electives for the BS degree in Computer Science. This course is the same as SySc 346; course may be taken only once for credit. Credits 4 Cross Listed Courses SySc 346U", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/300/cs-346u", "title": "\r\n\tPortland State University\u00a0-\u00a0CS346U\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 161 Introduction to Programming and Problem-Solving Introduction to fundamental concepts of computer science. Problem solving, algorithm and program design, data types, loops, control structures, subprograms, and arrays. Learn to write programs in a high level programming language. Surveys current social and ethical aspects of computer science. Recommended prerequisite: Mth 111Z . Credits 4", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/100/cs-161", "title": "\r\n\tPortland State University\u00a0-\u00a0CS161\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 358 Principles of Programming Languages Syntax and semantics. Compilers and interpreters. Programs as data. Regular expressions and context free grammars. Programming paradigms, including procedural, functional, and object-oriented programming. Type systems, including dynamic and static typing disciplines. Binding, scope, data abstraction, and modularity. Denotational, operational, and axiomatic semantics. Introduction to program correctness. Credits 4 Prerequisite CS 302 , CS 314 , and CS 350 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/300/cs-358", "title": "\r\n\tPortland State University\u00a0-\u00a0CS358\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 466 Voice Assistants Provides an introduction to voice technologies and how to design and build voice-enabled applications, by learning the concepts, techniques, and frameworks needed to build fully functional chatbots and virtual assistants. Students will explore the conversational design process and how to build effective voice user interfaces (VUIs) and conversational user interfaces (CUIs), and create voice-enabled applications and virtual assistants using popular APIs and platforms. Course assumes a working knowledge of JavaScript and Node.js or Python. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 566 and may be taken only once for credit. Prerequisite Admission to program", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-466", "title": "\r\n\tPortland State University\u00a0-\u00a0CS466\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 199 Special Studies (Credit to be arranged.) Credits 0-12", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/100/cs-199", "title": "\r\n\tPortland State University\u00a0-\u00a0CS199\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 461P Open Source Software Development Laboratory Explores Open Source software engineering and its methodologies in a laboratory classroom setting. Focuses on the development and delivery of Open Source software projects by teams of 1-3 students. Students prepare and present material, working using email and the web. Credits 4 Prerequisite CS 314 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-461p", "title": "\r\n\tPortland State University\u00a0-\u00a0CS461P\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 399P Special Studies (Credit to be arranged.) Credits 1-6", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/300/cs-399p", "title": "\r\n\tPortland State University\u00a0-\u00a0CS399P\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 504 Cooperative Education/Internship (Credit to be arranged.) Consent of instructor. Credits 1-9", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-504", "title": "\r\n\tPortland State University\u00a0-\u00a0CS504\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 314 Elements of Software Engineering Practical techniques of program development for medium-scale software produced by individuals. Software development from problem specification through design, implementation, testing, and maintenance. The fundamental design techniques of step-wise refinement and data abstraction. A software project will be carried through the development cycle. Credits 4 Prerequisite CS 302", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/300/cs-314", "title": "\r\n\tPortland State University\u00a0-\u00a0CS314\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 442P Advanced Artificial Intelligence: Combinatorial Games Covers the theory and practice of finding optimal and satisfying solutions to one-player and two-player combinatorial games, including such popular games as Sokoban, Othello, checkers, chess, backgammon, bridge, and CCGs. Simple applications in decision theory and economics may also be discussed. Emphasis on implementation of state-of-the-art solution techniques. Credits 4 Prerequisite CS 302 or experience with algorithms and data structures.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-442p", "title": "\r\n\tPortland State University\u00a0-\u00a0CS442P\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 340 Discrete Structures for Engineers A one-term introduction to discrete structures with applications to computing problems. Topics include sets, relations, functions, counting, graphs, trees, recursion, propositional and predicate logic, proof techniques, Boolean algebra. The course may not be used as part of the degree requirements for the BS degree in Computer Science. Credits 4 Prerequisite CS 163 , Math 252.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/300/cs-340", "title": "\r\n\tPortland State University\u00a0-\u00a0CS340\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 585 Cryptography The goal of cryptography is the encoding of information via a cryptographic system. Cryptanalysis studies the breaking of cryptosystems. This course focuses on cryptography but with respect to cryptanalysis. An overview of classical systems with an in-depth examination of modern cryptosystems. This includes block algorithms such as DES; public-key cryptosystems, such as RSA; and one-way functions. Additional topics include cryptographic protocols, signature schemes, pseudo-random number generation, Shannon's information theory, and stream ciphers. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 485 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-585", "title": "\r\n\tPortland State University\u00a0-\u00a0CS585\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 558 Programming Languages In-depth study of current and historical issues in the design, implementation, and application of programming languages. Topics range from basic to advanced. Areas include syntax, semantics, scoping, typing, abstraction, exceptions, and concurrency. Computational paradigms such as functional, logic, and/or object oriented are analyzed. Several \"recent\" programming languages used. Expected preparation: CS 320. Credits 3 Slash Listed Courses Also offered as CS 658 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-588", "title": "\r\n\tPortland State University\u00a0-\u00a0CS558\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 572 Operating System Internals Internals of a specific operating system including structure of the kernel, block buffering cache, file system structure and system calls, process structure and scheduling, memory management, device driver interface, and inter process communication. Credits 3 Slash Listed Courses Also offered as CS 672 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-572", "title": "\r\n\tPortland State University\u00a0-\u00a0CS572\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 402 Independent Study (Credit to be arranged.) Credits 1-12", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-402", "title": "\r\n\tPortland State University\u00a0-\u00a0CS402\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 555 Software Specification and Verification Theoretical and practical aspects of the software development process or software lifecycle. Covers the first part of the cycle: formulating the external requirements, specifying what the software is to do, and the abstract design. Emphasis will be on the formal aspects of specification and verification. Credits 3 Slash Listed Courses Also offered as CS 655 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-555", "title": "\r\n\tPortland State University\u00a0-\u00a0CS555\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 441 Artificial Intelligence Introduction to the basic concepts and techniques of artificial intelligence. Knowledge representation, problem solving, machine learning, natural language understanding, and AI search techniques. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 541 and may be taken only once for credit. Prerequisite CS 302 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-441", "title": "\r\n\tPortland State University\u00a0-\u00a0CS441\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 422L Lab for CS 422 Lab for CS 422 . Credits 0", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-422l", "title": "\r\n\tPortland State University\u00a0-\u00a0CS422L\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 653 Design Patterns Software design patterns are reusable solutions to recurring software problems. They capture successful experiences and convey expert insight and knowledge to less experienced developers. Course provides an in-depth view of patterns using Java as the presentation language. Course is suitable to software architects and developers who are already well-versed in this language. In addition, it offers continuous opportunities for learning the most advanced features of the Java language and understanding some principles behind the design of its fundamental libraries. Credits 3 Slash Listed Courses Also offered as CS 553 and may be taken only once for credit. Prerequisite programming in Java and CS 520 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/600/cs-653", "title": "\r\n\tPortland State University\u00a0-\u00a0CS653\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 655 Software Specification and Verification Theoretical and practical aspects of the software development process or software lifecycle. Covers the first part of the cycle: formulating the external requirements, specifying what the software is to do, and the abstract design. Emphasis will be on the formal aspects of specification and verification. Credits 3 Slash Listed Courses Also offered as CS 555 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/600/cs-655", "title": "\r\n\tPortland State University\u00a0-\u00a0CS655\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 487P Database Management Systems Implementation Internal design of a relational database management system. Concurrency control; lock managers; crash recovery; query and operator evaluation; query optimization; storage management; index structures; system catalogs. Credits 4 Prerequisite CS 486 and CS 333 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-487p", "title": "\r\n\tPortland State University\u00a0-\u00a0CS487P\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 465P Full Stack Web Development This class provides an overview of how the web works and covers the spectrum of full stack web development, including using front-end and back-end frameworks to build accessible and responsive applications. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 565 and may be taken only once for credit. Prerequisite CS 302 , CS 463", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-465p", "title": "\r\n\tPortland State University\u00a0-\u00a0CS465P\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 399 Special Studies (Credit to be arranged.) Consent of instructor. Credits 0-6", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/300/cs-399", "title": "\r\n\tPortland State University\u00a0-\u00a0CS399\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 409 Practicum (Credit to be arranged.) Consent of instructor. Credits 1-9", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-409", "title": "\r\n\tPortland State University\u00a0-\u00a0CS409\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 570 Machine Learning Seminar Graduate seminar on machine learning. Students will read and discuss recent papers in the machine learning literature. This one-credit course will be offered each term, and students may take it multiple times. Credits 1 Prerequisite CS 445 or CS 545 or permission of instructor.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-570", "title": "\r\n\tPortland State University\u00a0-\u00a0CS570\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 605 Reading and Conference (Credit to be arranged.) Consent of instructor. Credits 1-8", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/600/cs-605", "title": "\r\n\tPortland State University\u00a0-\u00a0CS605\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 333 Introduction to Operating Systems Introduction to the principles of operating systems and concurrent programming. Operating system services, file systems, resource management, synchronization. The concept of a process; process cooperation and interference. Introduction to networks, and protection and security. Examples drawn from one or more modern operating systems. Programming projects, including concurrent programming. Credits 4 Prerequisite CS 302", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/300/cs-333", "title": "\r\n\tPortland State University\u00a0-\u00a0CS333\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 604 Cooperative Education/Internship (Credit to be arranged.) Consent of instructor. Credits 1-8", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/600/cs-604", "title": "\r\n\tPortland State University\u00a0-\u00a0CS604\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 696 Network Management and Security Covers both network management and network security. Network management will include the design of LAN-based networks, including spanning tree protocols, bridge learning protocols, virtual LANs, and Ethernet switches, and the security of switches and routers. Network management protocols will be covered in-depth including switch and router management information bases, as well as associated SNMP protocols, and network monitoring tools. The second half of the class will focus on network security. In order to understand the network security problem, the security section will begin with a review of various forms of network attacks. We then turn to network-side security management including both passive measures like firewall defense schemes including packet filers, and bastion hosts. Newer secure protocols will then be covered including network-layer security and various application-layer secure protocols. Credits 3 Prerequisite CS 594 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/600/cs-696", "title": "\r\n\tPortland State University\u00a0-\u00a0CS696\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 538 Computer Architecture Processors, memory hierarchy, and bus systems. Multi-level caches and cache coherence in MP systems. Arithmetic algorithms. RISC vs. CISC instructions, pipelining, and software pipelining. Superscalar, super pipelined, and VLIW architectures. Connection networks. Performance evaluation, simulation, and analytic models. Performance enhancement through branch prediction and out-of-order execution. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 438 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-538", "title": "\r\n\tPortland State University\u00a0-\u00a0CS538\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 347U The Internet Age Examination of the Internet and its evolution over the last 30 years to become an essential part of today's society. Also examines the impact the Internet has had on society as well as potential threats to its continued success. The course may not be used as one of the upper-division CS Electives for the BS degree in Computer Science. Credits 4", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/300/cs-347u", "title": "\r\n\tPortland State University\u00a0-\u00a0CS347U\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 510 Selected Topics (Credit to be arranged.) Consent of instructor. Credits 1-6", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-510", "title": "\r\n\tPortland State University\u00a0-\u00a0CS510\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 668 Functional Logic Programming Introduction to functional logic programming. Foundations and basic principles of this paradigm will be explained in some depth and complemented by encoding practical problems in a functional logic language using a leading compiler/ interpreter. Focus on non-determinism and computations with incomplete information. Implementation techniques will be briefly discussed. Credits 3 Slash Listed Courses Also offered as CS 568 and may be taken only once for credit. Prerequisite CS 558 Programming Languages.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/600/cs-668", "title": "\r\n\tPortland State University\u00a0-\u00a0CS668\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 564 Front End Web Technologies Students will learn the languages, libraries, and frameworks needed to build user interfaces. This class will start with a review of HTML, CSS, and JavaScript, before focusing on React and the React ecosystem. Students will also work with CSS animations, gain experience with data visualization libraries, and learn about design principles and design systems. The final project is a dashboard application, which will leverage many of the topics covered in class and give students the opportunity to create a data-driven React application. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 464P and may be taken only once for credit. Prerequisite CS 563", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-564", "title": "\r\n\tPortland State University\u00a0-\u00a0CS564\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 584 Algorithm Design and Analysis An advanced in-depth study in the design and analysis of algorithms. Topics include models of computation, sorting, data structures, graph algorithms, matrix multiplication, fast Fourier transform, polynomial arithmetic, pattern matching, and NP-complete problems. Credits 3 Slash Listed Courses Also offered as CS 684 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-584", "title": "\r\n\tPortland State University\u00a0-\u00a0CS584\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS CS 435L Lab for CS 435 Lab for CS 435 . Credits 0 Corequisite CS 435", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-435l", "title": "\r\n\tPortland State University\u00a0-\u00a0CSCS 435L\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 566 Voice Assistants Provides an introduction to voice technologies and how to design and build voice-enabled applications, by learning the concepts, techniques, and frameworks needed to build fully functional chatbots and virtual assistants. Students will explore the conversational design process and how to build effective voice user interfaces (VUIs) and conversational user interfaces (CUIs), and create voice-enabled applications and virtual assistants using popular APIs and platforms. Course assumes a working knowledge of JavaScript and Node.js or Python. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 466 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-566", "title": "\r\n\tPortland State University\u00a0-\u00a0CS566\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 463 Intro to Web Development Students will learn the fundamentals of web development, the structure and functionality of the web, and how to create responsive and accessible web applications using HTML, CSS, and JavaScript. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 563 and may be taken only once for credit. Prerequisite Admission to the program", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-463", "title": "\r\n\tPortland State University\u00a0-\u00a0CS463\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 565 Full Stack Web Development This class provides an overview of how the web works and covers the spectrum of full stack web development, including using front-end and back-end frameworks to build accessible and responsive applications. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 465P and may be taken only once for credit. Prerequisite CS 563", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-565", "title": "\r\n\tPortland State University\u00a0-\u00a0CS565\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 533 Concepts of Operating Systems Survey of concepts and techniques used in modern operating systems. Sample concepts covered are concurrency, IPCs, scheduling, resource allocation, memory management, file systems, and security. Techniques for implementing operating systems taught through a programming project. Credits 3 Prerequisite CS 333 or CS 532", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-533", "title": "\r\n\tPortland State University\u00a0-\u00a0CS533\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 509 Practicum (Credit to be arranged.) Consent of instructor. Credits 1-9", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-509", "title": "\r\n\tPortland State University\u00a0-\u00a0CS509\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 163 Data Structures Data abstraction with formal specification. Elementary algorithm analysis. Basic concepts of data and its representation inside a computer. Linear, linked, and orthogonal lists; tree structures. Data structures are implemented as data abstractions using pointer based implementations. Sorting and search strategies. Data management. Three hours lecture and one 3-hour laboratory. The laboratory emphasizes practical programming skills. Credits 4 Prerequisite CS 162 with a grade of C or better. Co-requisites: concurrent enrollment in CS163L. Corequisite CS 163L", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/100/cs-163", "title": "\r\n\tPortland State University\u00a0-\u00a0CS163\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 494P Internetworking Protocols Advanced study of the protocols and algorithms used in the Internet (IETF) family of networking protocols. For example, ARP, IP, UDP, TCP, multicasting, routing protocols like RIP and OSPF, and application protocols like DNS, NFS, SNMP, FTP and HTTP. Issues such as addressing, name service, protocol design, and scalability will be explored. Credits 4 Prerequisite CS 333 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-494p", "title": "\r\n\tPortland State University\u00a0-\u00a0CS494P\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 415 Parallel Programming An introduction to parallel programming concepts and techniques. Topics include: parallel programming models and languages, share-memory programming, message-passing programming, performance models and analysis techniques, domain-specific parallel algorithms. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 515 and may be taken only once for credit. Prerequisite CS 302 and CS 333 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-415", "title": "\r\n\tPortland State University\u00a0-\u00a0CS415\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 405 Reading and Conference (Credit to be arranged.) Consent of instructor. Credits 1-6", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-405", "title": "\r\n\tPortland State University\u00a0-\u00a0CS405\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 421 Programming Language Implementation: Syntax and Static Semantics Techniques and tools for construction of compiler and interpreter front-ends, including: representation of programs using abstract syntax trees; lexical analysis, and lexer generators; parsing (recursive descent, top-down, and bottom-up), and parser generators; type checking and static analysis. Design and implementation of a front-end for a small programming language. Credits 4 Prerequisite CS 205 , CS 302 , CS 314 , and CS 358 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-421", "title": "\r\n\tPortland State University\u00a0-\u00a0CS421\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 403 Honors Thesis (Credit to be arranged.) Consent of instructor. Credits 1-4", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-403", "title": "\r\n\tPortland State University\u00a0-\u00a0CS403\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 302L Lab for CS 302 Lab for CS 302L . Credits 0 Corequisite CS 302", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/300/cs-302l", "title": "\r\n\tPortland State University\u00a0-\u00a0CS302L\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 520 Object-Oriented Programming & Design The fundamental concepts of object-oriented programming, including object-oriented modeling and design. The focus of the course will be to help students create programs that model their application domain, that exhibit that model to other programmers who read the code, and that are as a consequence maintainable and robust to change. Issues addressed may include data abstraction and modeling, the use and misuse of inheritance, higher-order data structures and their operations, reusability, refactoring, concurrency control, and usability. Includes programming assignments in an OO language. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 420 and may be taken only once for credit. Prerequisite CS 553", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-520", "title": "\r\n\tPortland State University\u00a0-\u00a0CS520\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 598 Introduction to Wireless Network Protocols Classification of wireless networking systems; study of multiple access protocols in single hop and multi-hop networks; performance analysis of protocols; overview of emerging radio technologies for high-throughput next generation systems; study of wireless communication protocol standards for cellular systems; case studies of deployed systems. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 498 and may be taken only once for credit. Prerequisite CS 250 or ECE 271.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-598", "title": "\r\n\tPortland State University\u00a0-\u00a0CS598\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 581 Theory of Computation Computability theory: study of models of computation (Turing, Church, Kleene), recursive function theory, properties of recursive, and recursively innumerable sets. Credits 3 Prerequisite CS 311 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-581", "title": "\r\n\tPortland State University\u00a0-\u00a0CS581\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 505 Reading and Conference (Credit to be arranged.) Consent of instructor. Credits 1-12", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-505", "title": "\r\n\tPortland State University\u00a0-\u00a0CS505\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 163L Lab for CS 163 Lab for CS 163 . Credits 0 Corequisite CS 163", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/100/cs-163l", "title": "\r\n\tPortland State University\u00a0-\u00a0CS163L\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 590 Introduction to Multimedia Computing and Networking Introductory course in multimedia computing and networking intended for senior undergraduate or graduate level students. The objective of this course is to introduce many of the fundamental concepts involved with handling multimedia data and applications. The course will cover (i) basic representation and compression of multimedia data types including H.261, JPEG, and MPEG, (ii) techniques to support multimedia quality-of-service in computing and networked systems, and (iii) networked streaming media techniques such as buffering and adaptation. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 490 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-590", "title": "\r\n\tPortland State University\u00a0-\u00a0CS590\r\n", "language": "en"}, "type": "Document"}, {"page_content": "300 CS 302 Programming Methodologies and Software Implementation CS 302L Lab for CS 302 CS 305 Social, Ethical, and Legal Implications of Computing CS 311 Computational Structures CS 313 Artificial Intelligence and Game Design CS 314 Elements of Software Engineering CS 333 Introduction to Operating Systems CS 333L Introduction to Operating Systems Lab CS 340 Discrete Structures for Engineers CS 345 Cyberculture: The Internet and Popular Culture CS 345 Cyberculture: The Internet and Popular Culture CS 346U Exploring Complexity in Science and Technology CS 347U The Internet Age CS 348U Digital Media, Technology and Society CS 350 Algorithms and Complexity CS 358 Principles of Programming Languages CS 399 Special Studies CS 399L Lab for CS 399 CS 399P Special Studies", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/300", "title": "\r\n\tPortland State University\u00a0-\u00a0300\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 350 Algorithms and Complexity Techniques for the design and analysis of algorithms. Case studies of existing algorithms (sorting, searching, graph algorithms, dynamic programming, matrix multiplication, fast Fourier transform.) NP-Completeness. Credits 4 Prerequisite CS 163 , CS 250 , Mth 251", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/300/cs-350", "title": "\r\n\tPortland State University\u00a0-\u00a0CS350\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 561 Open Source Software Development Laboratory Explores Open Source software engineering and its methodologies in a laboratory classroom setting. Focuses on the development and delivery of Open Source software projects by teams of 1-3 students. Students prepare and present material, working using email and the web. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 461 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-561", "title": "\r\n\tPortland State University\u00a0-\u00a0CS561\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 699 Special Studies Credit to be arranged. Credits 1-6", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/600/cs-699", "title": "\r\n\tPortland State University\u00a0-\u00a0CS699\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 658 Programming Languages In-depth study of current and historical issues in the design, implementation, and application of programming languages. Topics range from basic to advanced. Areas include syntax, semantics, scoping, typing, abstraction, exceptions, and concurrency. Computational paradigms such as functional, logic, and/or object oriented are analyzed. Several \"recent\" programming languages used. Credits 3 Slash Listed Courses Also offered as CS 558 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/600/cs-658", "title": "\r\n\tPortland State University\u00a0-\u00a0CS658\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 547 Computer Graphics This course will provide an introduction to graphics systems and applications. Basic structure of interactive graphics systems, characteristics of various hardware devices. Control of display devices, implementation of simple packages, device independence, and standard packages. Distributed architectures for graphics, hidden line and hidden surfaces algorithms, representations of curves and surfaces. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 447 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-547", "title": "\r\n\tPortland State University\u00a0-\u00a0CS547\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 554 Software Engineering Current methodologies for the development of large, industrial strength software systems. Topics include requirements, specification, design, implementation, testing, project management and cost estimation, formal methods, and software process improvement. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 454 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-554", "title": "\r\n\tPortland State University\u00a0-\u00a0CS554\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 486 Introduction to Database Management Systems Introduction to fundamental concepts of database management systems using primarily the relational model. Schema design and refinement. Query languages. Database application development environments. Overview of physical data organization, query optimization and processing, physical design, security, and transactions used in recovery and concurrency control. Expected preparation: CS 251 . Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 586 and may be taken only once for credit. Prerequisite CS 161 and CS 250 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-486", "title": "\r\n\tPortland State University\u00a0-\u00a0CS486\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 506 Special Projects (Credit to be arranged.) Consent of instructor. Credits 1-9", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-506", "title": "\r\n\tPortland State University\u00a0-\u00a0CS506\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 684 Algorithm Design and Analysis An advanced in-depth study in the design and analysis of algorithms. Topics include models of computation, sorting, data structures, graph algorithms, matrix multiplication, fast Fourier transform, polynomial arithmetic, pattern matching, and NP-complete problems. Credits 3 Slash Listed Courses Also offered as CS 584 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/600/cs-684", "title": "\r\n\tPortland State University\u00a0-\u00a0CS684\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 106 Computing Fundamentals II Introduction to programming, appropriate for non-CS majors. Introduction to the logical thought processes and problem-solving strategies used when programming. Concepts presented include problem definition and requirements gathering, generating a description of a step-by-step solution (the algorithm), writing a program, testing, and documentation. The programming language Visual Basic is used; several programming projects are completed during the term. Expected preparation: high school algebra, knowledge of Windows and the ability to use Windows Explorer. Credits 4", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/100/cs-106", "title": "\r\n\tPortland State University\u00a0-\u00a0CS106\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 535 Accelerated Computing Heterogeneous approaches that use special-purpose processors to accelerate the execution of a variety of applications. GPUs, Intel Xeon Phi, APUs, FPGUs. The sustainability implications of these platforms. Lectures, homeworks, labs, and group programming projects using NVIDIA GPUs and Intel Xeon Phi. Credits 3 Slash Listed Courses Also offered for undergraduate-level credit as CS 435 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-535", "title": "\r\n\tPortland State University\u00a0-\u00a0CS535\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 457 Functional Programming Introduction to functional notation, recursion, higher-order functions, reasoning about functions, and models for the evaluation of applicative expressions. Use of functional languages. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 557 and may be taken only once for credit. Prerequisite CS 302", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-457", "title": "\r\n\tPortland State University\u00a0-\u00a0CS457\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 438 Computer Architecture Processors, memory hierarchy, and bus systems. Multi-level caches and cache coherence in MP systems. Arithmetic algorithms. RISC vs. CISC instructions, pipelining, and software pipelining. Superscalar, super pipelined, and VLIW architectures. Connection networks. Performance evaluation, simulation, and analytic models. Performance enhancement through branch prediction and out-of-order execution. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 538 and may be taken only once for credit. Prerequisite CS 333 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-438", "title": "\r\n\tPortland State University\u00a0-\u00a0CS438\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 503 Thesis (Credit to be arranged.) Consent of instructor. Credits 1-9", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-503", "title": "\r\n\tPortland State University\u00a0-\u00a0CS503\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 299 Special Studies (Credit to be arranged.) Credits 0-4", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/200/cs-299", "title": "\r\n\tPortland State University\u00a0-\u00a0CS299\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 583 Automata and Formal Languages An advanced study of the theory of automata, formal languages and computational complexity. Main subjects are finite state concepts, formal grammars, computability, Turing machines, and computational complexity. Credits 3 Prerequisite CS 582 /682.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-583", "title": "\r\n\tPortland State University\u00a0-\u00a0CS583\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 545 Machine Learning Provides a broad introduction to techniques for building computer systems that learn from experience; conceptual grounding and practical experience with several learning systems; and grounding for advanced study in statistical learning methods, and for work with adaptive technologies used in speech and image processing, robotic planning and control, diagnostic systems, complex system modeling, and iterative optimization. Students gain practical experience implementing and evaluating systems applied to pattern recognition, prediction, and optimization problems. Credits 3 Slash Listed Courses Also offered as undergraduate-level credit as CS 445 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-545", "title": "\r\n\tPortland State University\u00a0-\u00a0CS545\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 205 System Programming and Architecture Introduction to computer systems from a software perspective. Topics include: 1) Basic machine organization, 2) System programming using C and assembly language, 3) System tools such as compilers and debuggers, 4) Data representation (bits & bytes, characters, integers, floating point numbers), 5) Implementation of control flow, procedure calls, and complex data types at machine level, 6) Improving program performance, and 7) Introduction to memory hierarchy. Credits 4 Prerequisite CS 162 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/200/cs-205", "title": "\r\n\tPortland State University\u00a0-\u00a0CS205\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 302 Programming Methodologies and Software Implementation Introduces principles and techniques for producing high-quality software solutions to computational problems using modern programming languages. Important topics include: analysis of informal specifications and documentation; unit testing; abstract data types; object-oriented and functional programming design techniques; and use of software libraries. Laboratory exercises will include application of contemporary software tools, including integrated development environments, debuggers, version control, and build frameworks. Credits 4 Prerequisite CS 163 , CS 205 , CS 250 Corequisite CS 302L", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/300/cs-302", "title": "\r\n\tPortland State University\u00a0-\u00a0CS302\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 498 Introduction to Wireless Network Protocols Classification of wireless networking systems; study of multiple access protocols in single hop and multi-hop networks; performance analysis of protocols; overview of emerging radio technologies for high-throughput next generation systems; study of wireless communication protocol standards for cellular systems; case studies of deployed systems. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 598 and may be taken only once for credit. Prerequisite CS 250 or ECE 271.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-498", "title": "\r\n\tPortland State University\u00a0-\u00a0CS498\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 404 Cooperative Education/Internship (Credit to be arranged.) Consent of instructor. Credits 1-12", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-404", "title": "\r\n\tPortland State University\u00a0-\u00a0CS404\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 401 Research (Credit to be arranged.) Consent of instructor. Credits 1-6", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-401", "title": "\r\n\tPortland State University\u00a0-\u00a0CS401\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 551 Numerical Computation Introduction to numerical methods. Includes topics from elementary discussion of errors, polynomials, interpolation, quadrature, linear systems of equations, and solution of nonlinear equations. Credits 3 Slash Listed Courses Also offered for undergraduate-credit as CS 451 and may be taken only once for credit.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/500/cs-551", "title": "\r\n\tPortland State University\u00a0-\u00a0CS551\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 311 Computational Structures Introduces the foundations of computing. Regular languages and finite automata. Context free languages and pushdown automata. Turing machines and equivalent models of computation. Computability. Introduction to complexity. An appropriate programming language is used for programming experiments. Credits 4 Prerequisite CS 251", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/300/cs-311", "title": "\r\n\tPortland State University\u00a0-\u00a0CS311\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 162L Lab for CS 162 Lab for CS 162 . Credits 0 Corequisite CS 162", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/100/cs-162l", "title": "\r\n\tPortland State University\u00a0-\u00a0CS162L\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 485 Cryptography The goal of cryptography is the encoding of information via a cryptographic system. Cryptanalysis studies the breaking of cryptosystems. This course focuses on cryptography but with respect to cryptanalysis. An overview of classical systems with an in-depth examination of modern cryptosystems. This includes block algorithms such as DES; public-key cryptosystems, such as RSA; and one-way functions. Additional topics include cryptographic protocols, signature schemes, pseudo-random number generation, Shannon's information theory, and stream ciphers. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 585 and may be taken only once for credit. Prerequisite CS 350 .", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-485", "title": "\r\n\tPortland State University\u00a0-\u00a0CS485\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 659 Software Measurement and Models Survey, evaluation, and application of software measurement techniques and models. Particular emphasis on product metrics such as Software Science, Cyclomatic Complexity, and Function Points. Credits 3", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/600/cs-659", "title": "\r\n\tPortland State University\u00a0-\u00a0CS659\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 105 Computing Fundamentals I Intended as an overview of computers and computer technology for non-CS majors, this course is often described as a computer literacy course. The primary focus is on the personal computer and personal productivity software. Hardware components of computers such as processors, memory, and input/output devices are discussed and compared. Software is the primary focus of the course. The main topics are system software (Windows, OS X, etc) and applications (such as browsers, word processors, spreadsheets, presentation graphics and database managers). The course concludes with discussions concerning legal and ethical issues surrounding computer technology, management information systems, and systems analysis. Expected preparation: high school algebra. Credits 4", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/100/cs-105", "title": "\r\n\tPortland State University\u00a0-\u00a0CS105\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 420 Object-Oriented Programming and Design The fundamental concepts of object-oriented programming, including object-oriented modeling and design. The focus of the course will be to help students create programs that model their application domain, that exhibit that model to other programmers who read the code, and that are as a consequence maintainable and robust to change. Issues addressed may include data abstraction and modeling, the use and misuse of inheritance, higher-order data structures and their operations, reusability, refactoring, concurrency control, and usability. Includes programming assignments in an OO language. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 520 and may be taken only once for credit. Prerequisite CS 358", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-420", "title": "\r\n\tPortland State University\u00a0-\u00a0CS420\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 469 Software Engineering Capstone I Emphasizes teamwork on a substantial project that will be developed for a real customer. The course integrates the knowledge and skills from the rest of the CS curriculum. This course creates an obligation for participation for two consecutive quarters. This is the first course in a sequence of two CS 469 , CS 470 and must be taken in sequence. Offered as P/NP only. Credits 3 Prerequisite CS 302 , CS 314 , CS 333 , CS 350 , CS 358 , and at least one Programming intensive course.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-469", "title": "\r\n\tPortland State University\u00a0-\u00a0CS469\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 492 Malware Reverse Engineering Studies the techniques malicious code developers employ to exploit vulnerable computer systems. The course explores the form and function of a range of malware while exploring how the increased mixing of code and data is now exposing us to an array of security vulnerabilities and exploits. Given these threats, the course will then examine modern defenses against malware and how they can be used to protect users. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 592 and may be taken only once for credit. Prerequisite Junior-standing and admission into the CS program.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-492", "title": "\r\n\tPortland State University\u00a0-\u00a0CS492\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 410P Selected Topics Programming intensive version of CS 410 . (Credit to be arranged.) Consent of instructor. Credits 1-6", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/copy-of-cs-410", "title": "\r\n\tPortland State University\u00a0-\u00a0CS410P\r\n", "language": "en"}, "type": "Document"}, {"page_content": "CS 480 Randomized Algorithms and Probabilistic Analysis Probabilistic tools used in the design and analysis of modern algorithms and data structures. Topics include: review discrete random, occupancy problems, tail bounds, Markov chains, the probabilistic method, martingales, Monte Carlo methods. The course explores a variety of CS applications. Credits 4 Slash Listed Courses Also offered for graduate-level credit as CS 580 and may be taken only once for credit. Prerequisite CS 350 , Stats 451.", "metadata": {"source": "https://pdx.smartcatalogiq.com/en/2023-2024/bulletin/courses/cs-computer-science/400/cs-480", "title": "\r\n\tPortland State University\u00a0-\u00a0CS480\r\n", "language": "en"}, "type": "Document"}]